;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3
26 state 1 stmt_0_4

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4

; halt variables - halt_<thread>
32 state 1 halt_0
33 state 1 halt_1

; heap variable
34 state 3 heap

; exit flag variable
35 state 1 exit

; exit code variable
36 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
37 input 1 thread_0
38 input 1 thread_1

; store buffer flush variables - flush_<thread>
39 input 1 flush_0
40 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
41 and 1 22 37 exec_0_0
42 and 1 23 37 exec_0_1
43 and 1 24 37 exec_0_2
44 and 1 25 37 exec_0_3
45 and 1 26 37 exec_0_4

46 and 1 27 38 exec_1_0
47 and 1 28 38 exec_1_1
48 and 1 29 38 exec_1_2
49 and 1 30 38 exec_1_3
50 and 1 31 38 exec_1_4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
51 init 2 12 6
52 add 2 12 7
53 ite 2 41 52 12 0:0:ADDI:1
54 read 2 34 6
55 eq 1 16 6
56 and 1 20 55
57 ite 2 56 18 54
58 ite 2 43 57 53 0:2:LOAD:0
59 read 2 34 7
60 eq 1 16 7
61 and 1 20 60
62 ite 2 61 18 59
63 ite 2 44 62 58 0:3:LOAD:1
64 next 2 12 63 accu_0

65 init 2 13 6
66 add 2 13 7
67 ite 2 46 66 13 1:0:ADDI:1
68 eq 1 17 7
69 and 1 21 68
70 ite 2 69 19 59
71 ite 2 48 70 67 1:2:LOAD:1
72 eq 1 17 6
73 and 1 21 72
74 ite 2 73 19 54
75 ite 2 49 74 71 1:3:LOAD:0
76 next 2 13 75 accu_1

; mem variables - mem_<thread>
77 init 2 14 6
78 next 2 14 14 mem_0

79 init 2 15 6
80 next 2 15 15 mem_1

; store buffer address variables - sb-adr_<thread>
81 init 2 16 6
82 ite 2 42 6 16 0:1:STORE:0
83 next 2 16 82 sb-adr_0

84 init 2 17 6
85 ite 2 47 7 17 1:1:STORE:1
86 next 2 17 85 sb-adr_1

; store buffer value variables - sb-val_<thread>
87 init 2 18 6
88 ite 2 42 12 18 0:1:STORE:0
89 next 2 18 88 sb-val_0

90 init 2 19 6
91 ite 2 47 13 19 1:1:STORE:1
92 next 2 19 91 sb-val_1

; store buffer full variables - sb-full_<thread>
93 init 1 20 4
94 or 1 42 20
95 ite 1 39 4 94
96 next 1 20 95 sb-full_0

97 init 1 21 4
98 or 1 47 21
99 ite 1 40 4 98
100 next 1 21 99 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
101 init 1 22 5
102 and 1 22 -41 0:0:ADDI:1
103 next 1 22 102 stmt_0_0

104 init 1 23 4
105 and 1 23 -42 0:1:STORE:0
106 ite 1 22 41 105 0:0:ADDI:1
107 next 1 23 106 stmt_0_1

108 init 1 24 4
109 and 1 24 -43 0:2:LOAD:0
110 ite 1 23 42 109 0:1:STORE:0
111 next 1 24 110 stmt_0_2

112 init 1 25 4
113 and 1 25 -44 0:3:LOAD:1
114 ite 1 24 43 113 0:2:LOAD:0
115 next 1 25 114 stmt_0_3

116 init 1 26 4
117 and 1 26 -45 0:4:HALT
118 ite 1 25 44 117 0:3:LOAD:1
119 next 1 26 118 stmt_0_4

120 init 1 27 5
121 and 1 27 -46 1:0:ADDI:1
122 next 1 27 121 stmt_1_0

123 init 1 28 4
124 and 1 28 -47 1:1:STORE:1
125 ite 1 27 46 124 1:0:ADDI:1
126 next 1 28 125 stmt_1_1

127 init 1 29 4
128 and 1 29 -48 1:2:LOAD:1
129 ite 1 28 47 128 1:1:STORE:1
130 next 1 29 129 stmt_1_2

131 init 1 30 4
132 and 1 30 -49 1:3:LOAD:0
133 ite 1 29 48 132 1:2:LOAD:1
134 next 1 30 133 stmt_1_3

135 init 1 31 4
136 and 1 31 -50 1:4:HALT
137 ite 1 30 49 136 1:3:LOAD:0
138 next 1 31 137 stmt_1_4

; halt variables - halt_<thread>
139 init 1 32 4
140 or 1 45 32
141 next 1 32 140 halt_0

142 init 1 33 4
143 or 1 50 33
144 next 1 33 143 halt_1

; heap variable
145 init 3 34 11
146 write 3 34 16 18
147 ite 3 39 146 34 flush_0
148 write 3 34 17 19
149 ite 3 40 148 147 flush_1
150 next 3 34 149 heap

; exit flag variable
151 init 1 35 4
152 and 1 140 143
153 or 1 35 152
154 next 1 35 153 exit

; exit code variable
155 init 2 36 6
156 next 2 36 36 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

157 or 1 37 38
158 or 1 39 157
159 or 1 40 158
160 or 1 35 159
161 constraint 160
162 nand 1 37 38
163 nand 1 37 39
164 nand 1 37 40
165 nand 1 37 35
166 nand 1 38 39
167 nand 1 38 40
168 nand 1 38 35
169 nand 1 39 40
170 nand 1 39 35
171 nand 1 40 35
172 and 1 162 163
173 and 1 164 172
174 and 1 165 173
175 and 1 166 174
176 and 1 167 175
177 and 1 168 176
178 and 1 169 177
179 and 1 170 178
180 and 1 171 179
181 constraint 180

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

182 or 1 23 26
183 implies 1 182 -37
184 ite 1 20 183 -39
185 constraint 184 flush_0

186 or 1 28 31
187 implies 1 186 -38
188 ite 1 21 187 -40
189 constraint 188 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

190 implies 1 32 -37
191 constraint 190 halt_0

192 implies 1 33 -38
193 constraint 192 halt_1

