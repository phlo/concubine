;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3
26 state 1 stmt_0_4

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4

; halt variables - halt_<thread>
32 state 1 halt_0
33 state 1 halt_1

; heap variable
34 state 3 heap

; exit flag variable
35 state 1 exit

; exit code variable
36 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
37 input 1 thread_0
38 input 1 thread_1

; store buffer flush variables - flush_<thread>
39 input 1 flush_0
40 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
41 and 1 22 37 exec_0_0
42 and 1 23 37 exec_0_1
43 and 1 24 37 exec_0_2
44 and 1 25 37 exec_0_3
45 and 1 26 37 exec_0_4

46 and 1 27 38 exec_1_0
47 and 1 28 38 exec_1_1
48 and 1 29 38 exec_1_2
49 and 1 30 38 exec_1_3
50 and 1 31 38 exec_1_4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
51 init 2 12 6
52 add 2 12 7
53 ite 2 41 52 12 0:0:ADDI:1
54 read 2 34 6
55 eq 1 16 6
56 and 1 20 55
57 ite 2 56 18 54
58 ite 2 43 57 53 0:2:MEM:0
59 read 2 34 7
60 eq 1 16 7
61 and 1 20 60
62 ite 2 61 18 59
63 ite 2 44 62 58 0:3:MEM:1
64 next 2 12 63 accu_0

65 init 2 13 6
66 add 2 13 7
67 ite 2 46 66 13 1:0:ADDI:1
68 eq 1 17 7
69 and 1 21 68
70 ite 2 69 19 59
71 ite 2 48 70 67 1:2:MEM:1
72 eq 1 17 6
73 and 1 21 72
74 ite 2 73 19 54
75 ite 2 49 74 71 1:3:MEM:0
76 next 2 13 75 accu_1

; mem variables - mem_<thread>
77 init 2 14 6
78 ite 2 43 57 14 0:2:MEM:0
79 ite 2 44 62 78 0:3:MEM:1
80 next 2 14 79 mem_0

81 init 2 15 6
82 ite 2 48 70 15 1:2:MEM:1
83 ite 2 49 74 82 1:3:MEM:0
84 next 2 15 83 mem_1

; store buffer address variables - sb-adr_<thread>
85 init 2 16 6
86 ite 2 42 6 16 0:1:STORE:0
87 next 2 16 86 sb-adr_0

88 init 2 17 6
89 ite 2 47 7 17 1:1:STORE:1
90 next 2 17 89 sb-adr_1

; store buffer value variables - sb-val_<thread>
91 init 2 18 6
92 ite 2 42 12 18 0:1:STORE:0
93 next 2 18 92 sb-val_0

94 init 2 19 6
95 ite 2 47 13 19 1:1:STORE:1
96 next 2 19 95 sb-val_1

; store buffer full variables - sb-full_<thread>
97 init 1 20 4
98 or 1 42 20
99 ite 1 39 4 98
100 next 1 20 99 sb-full_0

101 init 1 21 4
102 or 1 47 21
103 ite 1 40 4 102
104 next 1 21 103 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
105 init 1 22 5
106 and 1 22 -41 0:0:ADDI:1
107 next 1 22 106 stmt_0_0

108 init 1 23 4
109 and 1 23 -42 0:1:STORE:0
110 ite 1 22 41 109 0:0:ADDI:1
111 next 1 23 110 stmt_0_1

112 init 1 24 4
113 and 1 24 -43 0:2:MEM:0
114 ite 1 23 42 113 0:1:STORE:0
115 next 1 24 114 stmt_0_2

116 init 1 25 4
117 and 1 25 -44 0:3:MEM:1
118 ite 1 24 43 117 0:2:MEM:0
119 next 1 25 118 stmt_0_3

120 init 1 26 4
121 and 1 26 -45 0:4:HALT
122 ite 1 25 44 121 0:3:MEM:1
123 next 1 26 122 stmt_0_4

124 init 1 27 5
125 and 1 27 -46 1:0:ADDI:1
126 next 1 27 125 stmt_1_0

127 init 1 28 4
128 and 1 28 -47 1:1:STORE:1
129 ite 1 27 46 128 1:0:ADDI:1
130 next 1 28 129 stmt_1_1

131 init 1 29 4
132 and 1 29 -48 1:2:MEM:1
133 ite 1 28 47 132 1:1:STORE:1
134 next 1 29 133 stmt_1_2

135 init 1 30 4
136 and 1 30 -49 1:3:MEM:0
137 ite 1 29 48 136 1:2:MEM:1
138 next 1 30 137 stmt_1_3

139 init 1 31 4
140 and 1 31 -50 1:4:HALT
141 ite 1 30 49 140 1:3:MEM:0
142 next 1 31 141 stmt_1_4

; halt variables - halt_<thread>
143 init 1 32 4
144 or 1 45 32
145 next 1 32 144 halt_0

146 init 1 33 4
147 or 1 50 33
148 next 1 33 147 halt_1

; heap variable
149 init 3 34 11
150 write 3 34 16 18
151 ite 3 39 150 34 flush_0
152 write 3 34 17 19
153 ite 3 40 152 151 flush_1
154 next 3 34 153 heap

; exit flag variable
155 init 1 35 4
156 and 1 144 147
157 or 1 35 156
158 next 1 35 157 exit

; exit code variable
159 init 2 36 6
160 next 2 36 36 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

161 or 1 37 38
162 or 1 39 161
163 or 1 40 162
164 or 1 35 163
165 constraint 164
166 nand 1 37 38
167 nand 1 37 39
168 nand 1 37 40
169 nand 1 37 35
170 nand 1 38 39
171 nand 1 38 40
172 nand 1 38 35
173 nand 1 39 40
174 nand 1 39 35
175 nand 1 40 35
176 and 1 166 167
177 and 1 168 176
178 and 1 169 177
179 and 1 170 178
180 and 1 171 179
181 and 1 172 180
182 and 1 173 181
183 and 1 174 182
184 and 1 175 183
185 constraint 184

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

186 or 1 23 26
187 implies 1 186 -37
188 ite 1 20 187 -39
189 constraint 188 flush_0

190 or 1 28 31
191 implies 1 190 -38
192 ite 1 21 191 -40
193 constraint 192 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

194 implies 1 32 -37
195 constraint 194 halt_0

196 implies 1 33 -38
197 constraint 196 halt_1

