;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 8

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3

26 state 1 stmt_1_0
27 state 1 stmt_1_1
28 state 1 stmt_1_2
29 state 1 stmt_1_3

; halt variables - halt_<thread>
30 state 1 halt_0
31 state 1 halt_1

; heap variable
32 state 3 heap

; exit flag variable
33 state 1 exit

; exit code variable
34 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
35 input 1 thread_0
36 input 1 thread_1

; store buffer flush variables - flush_<thread>
37 input 1 flush_0
38 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
39 and 1 22 35 exec_0_0
40 and 1 23 35 exec_0_1
41 and 1 24 35 exec_0_2
42 and 1 25 35 exec_0_3

43 and 1 26 36 exec_1_0
44 and 1 27 36 exec_1_1
45 and 1 28 36 exec_1_2
46 and 1 29 36 exec_1_3

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
47 init 2 12 6
48 add 2 12 7
49 ite 2 39 48 12 0:0:ADDI:1
50 read 2 32 6
51 eq 1 16 6
52 and 1 20 51
53 ite 2 52 18 50
54 eq 1 14 53
55 ite 2 54 7 6
56 ite 2 40 55 49 0:1:CAS:0
57 read 2 32 7
58 eq 1 16 7
59 and 1 20 58
60 ite 2 59 18 57
61 ite 2 41 60 56 0:2:LOAD:1
62 next 2 12 61 accu_0

63 init 2 13 6
64 add 2 13 7
65 ite 2 43 64 13 1:0:ADDI:1
66 eq 1 17 7
67 and 1 21 66
68 ite 2 67 19 57
69 eq 1 15 68
70 ite 2 69 7 6
71 ite 2 44 70 65 1:1:CAS:1
72 eq 1 17 6
73 and 1 21 72
74 ite 2 73 19 50
75 ite 2 45 74 71 1:2:LOAD:0
76 next 2 13 75 accu_1

; mem variables - mem_<thread>
77 init 2 14 6
78 next 2 14 14 mem_0

79 init 2 15 6
80 next 2 15 15 mem_1

; store buffer address variables - sb-adr_<thread>
81 init 2 16 6
82 next 2 16 16 sb-adr_0

83 init 2 17 6
84 next 2 17 17 sb-adr_1

; store buffer value variables - sb-val_<thread>
85 init 2 18 6
86 next 2 18 18 sb-val_0

87 init 2 19 6
88 next 2 19 19 sb-val_1

; store buffer full variables - sb-full_<thread>
89 init 1 20 4
90 ite 1 37 4 20
91 next 1 20 90 sb-full_0

92 init 1 21 4
93 ite 1 38 4 21
94 next 1 21 93 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
95 init 1 22 5
96 and 1 22 -39 0:0:ADDI:1
97 next 1 22 96 stmt_0_0

98 init 1 23 4
99 and 1 23 -40 0:1:CAS:0
100 ite 1 22 39 99 0:0:ADDI:1
101 next 1 23 100 stmt_0_1

102 init 1 24 4
103 and 1 24 -41 0:2:LOAD:1
104 ite 1 23 40 103 0:1:CAS:0
105 next 1 24 104 stmt_0_2

106 init 1 25 4
107 and 1 25 -42 0:3:HALT
108 ite 1 24 41 107 0:2:LOAD:1
109 next 1 25 108 stmt_0_3

110 init 1 26 5
111 and 1 26 -43 1:0:ADDI:1
112 next 1 26 111 stmt_1_0

113 init 1 27 4
114 and 1 27 -44 1:1:CAS:1
115 ite 1 26 43 114 1:0:ADDI:1
116 next 1 27 115 stmt_1_1

117 init 1 28 4
118 and 1 28 -45 1:2:LOAD:0
119 ite 1 27 44 118 1:1:CAS:1
120 next 1 28 119 stmt_1_2

121 init 1 29 4
122 and 1 29 -46 1:3:HALT
123 ite 1 28 45 122 1:2:LOAD:0
124 next 1 29 123 stmt_1_3

; halt variables - halt_<thread>
125 init 1 30 4
126 or 1 42 30
127 next 1 30 126 halt_0

128 init 1 31 4
129 or 1 46 31
130 next 1 31 129 halt_1

; heap variable
131 init 3 32 11
132 write 3 32 16 18
133 ite 3 37 132 32 flush_0
134 write 3 32 6 12
135 ite 3 54 134 32
136 ite 3 40 135 133 0:1:CAS:0
137 write 3 32 17 19
138 ite 3 38 137 136 flush_1
139 write 3 32 7 13
140 ite 3 69 139 32
141 ite 3 44 140 138 1:1:CAS:1
142 next 3 32 141 heap

; exit flag variable
143 init 1 33 4
144 and 1 126 129
145 or 1 33 144
146 next 1 33 145 exit

; exit code variable
147 init 2 34 6
148 next 2 34 34 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

149 or 1 35 36
150 or 1 37 149
151 or 1 38 150
152 or 1 33 151
153 constraint 152
154 nand 1 35 36
155 nand 1 35 37
156 nand 1 35 38
157 nand 1 35 33
158 nand 1 36 37
159 nand 1 36 38
160 nand 1 36 33
161 nand 1 37 38
162 nand 1 37 33
163 nand 1 38 33
164 and 1 154 155
165 and 1 156 164
166 and 1 157 165
167 and 1 158 166
168 and 1 159 167
169 and 1 160 168
170 and 1 161 169
171 and 1 162 170
172 and 1 163 171
173 constraint 172

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

174 or 1 23 25
175 implies 1 174 -35
176 ite 1 20 175 -37
177 constraint 176 flush_0

178 or 1 27 29
179 implies 1 178 -36
180 ite 1 21 179 -38
181 constraint 180 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

182 implies 1 30 -35
183 constraint 182 halt_0

184 implies 1 31 -36
185 constraint 184 halt_1

