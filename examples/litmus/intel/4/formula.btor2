;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 5

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
11 state 2 accu_0

; mem variables - mem_<thread>
12 state 2 mem_0

; store buffer address variables - sb-adr_<thread>
13 state 2 sb-adr_0

; store buffer value variables - sb-val_<thread>
14 state 2 sb-val_0

; store buffer full variables - sb-full_<thread>
15 state 1 sb-full_0

; statement activation variables - stmt_<thread>_<pc>
16 state 1 stmt_0_0
17 state 1 stmt_0_1
18 state 1 stmt_0_2
19 state 1 stmt_0_3

; halt variables - halt_<thread>
20 state 1 halt_0

; heap variable
21 state 3 heap

; exit flag variable
22 state 1 exit

; exit code variable
23 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
24 input 1 thread_0

; store buffer flush variables - flush_<thread>
25 input 1 flush_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
26 and 1 16 24 exec_0_0
27 and 1 17 24 exec_0_1
28 and 1 18 24 exec_0_2
29 and 1 19 24 exec_0_3

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

30 or 1 24 25
31 or 1 22 30
32 constraint 31
33 nand 1 24 25
34 nand 1 24 22
35 nand 1 25 22
36 and 1 33 34
37 and 1 35 36
38 constraint 37

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

39 or 1 17 19
40 implies 1 39 -24
41 ite 1 15 40 -25
42 constraint 41 flush_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

43 implies 1 20 -24
44 constraint 43 halt_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
45 init 2 11 6
46 add 2 11 7
47 ite 2 26 46 11 0:0:ADDI:1
48 read 2 21 6
49 eq 1 13 6
50 and 1 15 49
51 ite 2 50 14 48
52 ite 2 28 51 47 0:2:LOAD:0
53 next 2 11 52 accu_0

; mem variables - mem_<thread>
54 init 2 12 6
55 next 2 12 12 mem_0

; store buffer address variables - sb-adr_<thread>
56 init 2 13 6
57 ite 2 27 6 13 0:1:STORE:0
58 next 2 13 57 sb-adr_0

; store buffer value variables - sb-val_<thread>
59 init 2 14 6
60 ite 2 27 11 14 0:1:STORE:0
61 next 2 14 60 sb-val_0

; store buffer full variables - sb-full_<thread>
62 init 1 15 4
63 or 1 27 15
64 ite 1 25 4 63
65 next 1 15 64 sb-full_0

; statement activation variables - stmt_<thread>_<pc>
66 init 1 16 5
67 and 1 16 -26 0:0:ADDI:1
68 next 1 16 67 stmt_0_0

69 init 1 17 4
70 and 1 17 -27 0:1:STORE:0
71 ite 1 16 26 70 0:0:ADDI:1
72 next 1 17 71 stmt_0_1

73 init 1 18 4
74 and 1 18 -28 0:2:LOAD:0
75 ite 1 17 27 74 0:1:STORE:0
76 next 1 18 75 stmt_0_2

77 init 1 19 4
78 and 1 19 -29 0:3:HALT
79 ite 1 18 28 78 0:2:LOAD:0
80 next 1 19 79 stmt_0_3

; halt variables - halt_<thread>
81 init 1 20 4
82 or 1 29 20
83 next 1 20 82 halt_0

; heap variable
84 init 3 21 10
85 write 3 21 13 14
86 ite 3 25 85 21 flush_0
87 next 3 21 86 heap

; exit flag variable
88 init 1 22 4
89 or 1 22 82
90 next 1 22 89 exit

; exit code variable
91 init 2 23 6
92 next 2 23 23 exit-code

