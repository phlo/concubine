;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3
26 state 1 stmt_0_4

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4

; halt variables - halt_<thread>
32 state 1 halt_0
33 state 1 halt_1

; heap variable
34 state 3 heap

; exit flag variable
35 state 1 exit

; exit code variable
36 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
37 input 1 thread_0
38 input 1 thread_1

; store buffer flush variables - flush_<thread>
39 input 1 flush_0
40 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
41 and 1 22 37 exec_0_0
42 and 1 23 37 exec_0_1
43 and 1 24 37 exec_0_2
44 and 1 25 37 exec_0_3
45 and 1 26 37 exec_0_4

46 and 1 27 38 exec_1_0
47 and 1 28 38 exec_1_1
48 and 1 29 38 exec_1_2
49 and 1 30 38 exec_1_3
50 and 1 31 38 exec_1_4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
51 init 2 12 6
52 add 2 12 7
53 ite 2 41 52 12 0:0:ADDI:1
54 read 2 34 7
55 eq 1 16 7
56 and 1 20 55
57 ite 2 56 18 54
58 ite 2 44 57 53 0:3:LOAD:1
59 next 2 12 58 accu_0

60 init 2 13 6
61 add 2 13 7
62 ite 2 46 61 13 1:0:ADDI:1
63 read 2 34 6
64 eq 1 17 6
65 and 1 21 64
66 ite 2 65 19 63
67 ite 2 49 66 62 1:3:LOAD:0
68 next 2 13 67 accu_1

; mem variables - mem_<thread>
69 init 2 14 6
70 next 2 14 14 mem_0

71 init 2 15 6
72 next 2 15 15 mem_1

; store buffer address variables - sb-adr_<thread>
73 init 2 16 6
74 ite 2 42 6 16 0:1:STORE:0
75 next 2 16 74 sb-adr_0

76 init 2 17 6
77 ite 2 47 7 17 1:1:STORE:1
78 next 2 17 77 sb-adr_1

; store buffer value variables - sb-val_<thread>
79 init 2 18 6
80 ite 2 42 12 18 0:1:STORE:0
81 next 2 18 80 sb-val_0

82 init 2 19 6
83 ite 2 47 13 19 1:1:STORE:1
84 next 2 19 83 sb-val_1

; store buffer full variables - sb-full_<thread>
85 init 1 20 4
86 or 1 42 20
87 ite 1 39 4 86
88 next 1 20 87 sb-full_0

89 init 1 21 4
90 or 1 47 21
91 ite 1 40 4 90
92 next 1 21 91 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
93 init 1 22 5
94 and 1 22 -41 0:0:ADDI:1
95 next 1 22 94 stmt_0_0

96 init 1 23 4
97 and 1 23 -42 0:1:STORE:0
98 ite 1 22 41 97 0:0:ADDI:1
99 next 1 23 98 stmt_0_1

100 init 1 24 4
101 and 1 24 -43 0:2:FENCE
102 ite 1 23 42 101 0:1:STORE:0
103 next 1 24 102 stmt_0_2

104 init 1 25 4
105 and 1 25 -44 0:3:LOAD:1
106 ite 1 24 43 105 0:2:FENCE
107 next 1 25 106 stmt_0_3

108 init 1 26 4
109 and 1 26 -45 0:4:HALT
110 ite 1 25 44 109 0:3:LOAD:1
111 next 1 26 110 stmt_0_4

112 init 1 27 5
113 and 1 27 -46 1:0:ADDI:1
114 next 1 27 113 stmt_1_0

115 init 1 28 4
116 and 1 28 -47 1:1:STORE:1
117 ite 1 27 46 116 1:0:ADDI:1
118 next 1 28 117 stmt_1_1

119 init 1 29 4
120 and 1 29 -48 1:2:FENCE
121 ite 1 28 47 120 1:1:STORE:1
122 next 1 29 121 stmt_1_2

123 init 1 30 4
124 and 1 30 -49 1:3:LOAD:0
125 ite 1 29 48 124 1:2:FENCE
126 next 1 30 125 stmt_1_3

127 init 1 31 4
128 and 1 31 -50 1:4:HALT
129 ite 1 30 49 128 1:3:LOAD:0
130 next 1 31 129 stmt_1_4

; halt variables - halt_<thread>
131 init 1 32 4
132 or 1 45 32
133 next 1 32 132 halt_0

134 init 1 33 4
135 or 1 50 33
136 next 1 33 135 halt_1

; heap variable
137 init 3 34 11
138 write 3 34 16 18
139 ite 3 39 138 34 flush_0
140 write 3 34 17 19
141 ite 3 40 140 139 flush_1
142 next 3 34 141 heap

; exit flag variable
143 init 1 35 4
144 and 1 132 135
145 or 1 35 144
146 next 1 35 145 exit

; exit code variable
147 init 2 36 6
148 next 2 36 36 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

149 or 1 37 38
150 or 1 39 149
151 or 1 40 150
152 or 1 35 151
153 constraint 152
154 nand 1 37 38
155 nand 1 37 39
156 nand 1 37 40
157 nand 1 37 35
158 nand 1 38 39
159 nand 1 38 40
160 nand 1 38 35
161 nand 1 39 40
162 nand 1 39 35
163 nand 1 40 35
164 and 1 154 155
165 and 1 156 164
166 and 1 157 165
167 and 1 158 166
168 and 1 159 167
169 and 1 160 168
170 and 1 161 169
171 and 1 162 170
172 and 1 163 171
173 constraint 172

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

174 or 1 23 24
175 or 1 26 174
176 implies 1 175 -37
177 ite 1 20 176 -39
178 constraint 177 flush_0

179 or 1 28 29
180 or 1 31 179
181 implies 1 180 -38
182 ite 1 21 181 -40
183 constraint 182 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

184 implies 1 32 -37
185 constraint 184 halt_0

186 implies 1 33 -38
187 constraint 186 halt_1

