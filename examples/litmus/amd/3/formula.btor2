;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
9 state 2 accu_0
10 state 2 accu_1

; mem variables - mem_<thread>
11 state 2 mem_0
12 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
13 state 2 sb-adr_0
14 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
15 state 2 sb-val_0
16 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
17 state 1 sb-full_0
18 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
19 state 1 stmt_0_0
20 state 1 stmt_0_1
21 state 1 stmt_0_2
22 state 1 stmt_0_3
23 state 1 stmt_0_4
24 state 1 stmt_0_5

25 state 1 stmt_1_0
26 state 1 stmt_1_1
27 state 1 stmt_1_2
28 state 1 stmt_1_3
29 state 1 stmt_1_4
30 state 1 stmt_1_5

; halt variables - halt_<thread>
31 state 1 halt_0
32 state 1 halt_1

; heap variable
33 state 3 heap

; exit flag variable
34 state 1 exit

; exit code variable
35 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
36 input 1 thread_0
37 input 1 thread_1

; store buffer flush variables - flush_<thread>
38 input 1 flush_0
39 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
40 and 1 19 36 exec_0_0
41 and 1 20 36 exec_0_1
42 and 1 21 36 exec_0_2
43 and 1 22 36 exec_0_3
44 and 1 23 36 exec_0_4
45 and 1 24 36 exec_0_5

46 and 1 25 37 exec_1_0
47 and 1 26 37 exec_1_1
48 and 1 27 37 exec_1_2
49 and 1 28 37 exec_1_3
50 and 1 29 37 exec_1_4
51 and 1 30 37 exec_1_5

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
52 init 2 9 6
53 add 2 9 7
54 ite 2 40 53 9 0:0:ADDI:1
55 add 2 9 7
56 ite 2 42 55 54 0:2:ADDI:1
57 read 2 33 7
58 eq 1 13 7
59 and 1 17 58
60 ite 2 59 15 57
61 ite 2 44 60 56 0:4:LOAD:1
62 next 2 9 61 accu_0

63 init 2 10 6
64 add 2 10 7
65 ite 2 46 64 10 1:0:ADDI:1
66 add 2 10 7
67 ite 2 48 66 65 1:2:ADDI:1
68 read 2 33 6
69 eq 1 14 6
70 and 1 18 69
71 ite 2 70 16 68
72 ite 2 50 71 67 1:4:LOAD:0
73 next 2 10 72 accu_1

; mem variables - mem_<thread>
74 init 2 11 6
75 next 2 11 11 mem_0

76 init 2 12 6
77 next 2 12 12 mem_1

; store buffer address variables - sb-adr_<thread>
78 init 2 13 6
79 ite 2 41 6 13 0:1:STORE:0
80 ite 2 43 6 79 0:3:STORE:0
81 next 2 13 80 sb-adr_0

82 init 2 14 6
83 ite 2 47 7 14 1:1:STORE:1
84 ite 2 49 7 83 1:3:STORE:1
85 next 2 14 84 sb-adr_1

; store buffer value variables - sb-val_<thread>
86 init 2 15 6
87 ite 2 41 9 15 0:1:STORE:0
88 ite 2 43 9 87 0:3:STORE:0
89 next 2 15 88 sb-val_0

90 init 2 16 6
91 ite 2 47 10 16 1:1:STORE:1
92 ite 2 49 10 91 1:3:STORE:1
93 next 2 16 92 sb-val_1

; store buffer full variables - sb-full_<thread>
94 init 1 17 4
95 or 1 41 43
96 or 1 17 95
97 ite 1 38 4 96
98 next 1 17 97 sb-full_0

99 init 1 18 4
100 or 1 47 49
101 or 1 18 100
102 ite 1 39 4 101
103 next 1 18 102 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
104 init 1 19 5
105 and 1 19 -40 0:0:ADDI:1
106 next 1 19 105 stmt_0_0

107 init 1 20 4
108 and 1 20 -41 0:1:STORE:0
109 ite 1 19 40 108 0:0:ADDI:1
110 next 1 20 109 stmt_0_1

111 init 1 21 4
112 and 1 21 -42 0:2:ADDI:1
113 ite 1 20 41 112 0:1:STORE:0
114 next 1 21 113 stmt_0_2

115 init 1 22 4
116 and 1 22 -43 0:3:STORE:0
117 ite 1 21 42 116 0:2:ADDI:1
118 next 1 22 117 stmt_0_3

119 init 1 23 4
120 and 1 23 -44 0:4:LOAD:1
121 ite 1 22 43 120 0:3:STORE:0
122 next 1 23 121 stmt_0_4

123 init 1 24 4
124 and 1 24 -45 0:5:HALT
125 ite 1 23 44 124 0:4:LOAD:1
126 next 1 24 125 stmt_0_5

127 init 1 25 5
128 and 1 25 -46 1:0:ADDI:1
129 next 1 25 128 stmt_1_0

130 init 1 26 4
131 and 1 26 -47 1:1:STORE:1
132 ite 1 25 46 131 1:0:ADDI:1
133 next 1 26 132 stmt_1_1

134 init 1 27 4
135 and 1 27 -48 1:2:ADDI:1
136 ite 1 26 47 135 1:1:STORE:1
137 next 1 27 136 stmt_1_2

138 init 1 28 4
139 and 1 28 -49 1:3:STORE:1
140 ite 1 27 48 139 1:2:ADDI:1
141 next 1 28 140 stmt_1_3

142 init 1 29 4
143 and 1 29 -50 1:4:LOAD:0
144 ite 1 28 49 143 1:3:STORE:1
145 next 1 29 144 stmt_1_4

146 init 1 30 4
147 and 1 30 -51 1:5:HALT
148 ite 1 29 50 147 1:4:LOAD:0
149 next 1 30 148 stmt_1_5

; halt variables - halt_<thread>
150 init 1 31 4
151 or 1 45 31
152 next 1 31 151 halt_0

153 init 1 32 4
154 or 1 51 32
155 next 1 32 154 halt_1

; heap variable
156 write 3 33 13 15
157 ite 3 38 156 33 flush_0
158 write 3 33 14 16
159 ite 3 39 158 157 flush_1
160 next 3 33 159 heap

; exit flag variable
161 init 1 34 4
162 and 1 151 154
163 or 1 34 162
164 next 1 34 163 exit

; exit code variable
165 init 2 35 6
166 next 2 35 35 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

167 or 1 36 37
168 or 1 38 167
169 or 1 39 168
170 or 1 34 169
171 constraint 170
172 nand 1 36 37
173 nand 1 36 38
174 nand 1 36 39
175 nand 1 36 34
176 nand 1 37 38
177 nand 1 37 39
178 nand 1 37 34
179 nand 1 38 39
180 nand 1 38 34
181 nand 1 39 34
182 and 1 172 173
183 and 1 174 182
184 and 1 175 183
185 and 1 176 184
186 and 1 177 185
187 and 1 178 186
188 and 1 179 187
189 and 1 180 188
190 and 1 181 189
191 constraint 190

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

192 or 1 20 22
193 or 1 24 192
194 implies 1 193 -36
195 ite 1 17 194 -38
196 constraint 195 flush_0

197 or 1 26 28
198 or 1 30 197
199 implies 1 198 -37
200 ite 1 18 199 -39
201 constraint 200 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

202 implies 1 31 -36
203 constraint 202 halt_0

204 implies 1 32 -37
205 constraint 204 halt_1

