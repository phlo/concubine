;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 14

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3
26 state 1 stmt_0_4
27 state 1 stmt_0_5

28 state 1 stmt_1_0
29 state 1 stmt_1_1
30 state 1 stmt_1_2
31 state 1 stmt_1_3
32 state 1 stmt_1_4
33 state 1 stmt_1_5

; halt variables - halt_<thread>
34 state 1 halt_0
35 state 1 halt_1

; heap variable
36 state 3 heap

; exit flag variable
37 state 1 exit

; exit code variable
38 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
39 input 1 thread_0
40 input 1 thread_1

; store buffer flush variables - flush_<thread>
41 input 1 flush_0
42 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
43 and 1 22 39 exec_0_0
44 and 1 23 39 exec_0_1
45 and 1 24 39 exec_0_2
46 and 1 25 39 exec_0_3
47 and 1 26 39 exec_0_4
48 and 1 27 39 exec_0_5

49 and 1 28 40 exec_1_0
50 and 1 29 40 exec_1_1
51 and 1 30 40 exec_1_2
52 and 1 31 40 exec_1_3
53 and 1 32 40 exec_1_4
54 and 1 33 40 exec_1_5

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

55 or 1 39 40
56 or 1 41 55
57 or 1 42 56
58 or 1 37 57
59 constraint 58
60 nand 1 39 40
61 nand 1 39 41
62 nand 1 39 42
63 nand 1 39 37
64 nand 1 40 41
65 nand 1 40 42
66 nand 1 40 37
67 nand 1 41 42
68 nand 1 41 37
69 nand 1 42 37
70 and 1 60 61
71 and 1 62 70
72 and 1 63 71
73 and 1 64 72
74 and 1 65 73
75 and 1 66 74
76 and 1 67 75
77 and 1 68 76
78 and 1 69 77
79 constraint 78

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

80 or 1 23 24
81 or 1 27 80
82 implies 1 81 -39
83 ite 1 20 82 -41
84 constraint 83 flush_0

85 or 1 29 30
86 or 1 33 85
87 implies 1 86 -40
88 ite 1 21 87 -42
89 constraint 88 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

90 implies 1 34 -39
91 constraint 90 halt_0

92 implies 1 35 -40
93 constraint 92 halt_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
94 init 2 12 6
95 add 2 12 7
96 ite 2 43 95 12 0:0:ADDI:1
97 read 2 36 6
98 eq 1 16 6
99 and 1 20 98
100 ite 2 99 18 97
101 ite 2 46 100 96 0:3:MEM:0
102 read 2 36 7
103 eq 1 16 7
104 and 1 20 103
105 ite 2 104 18 102
106 ite 2 47 105 101 0:4:LOAD:1
107 next 2 12 106 accu_0

108 init 2 13 6
109 add 2 13 7
110 ite 2 49 109 13 1:0:ADDI:1
111 eq 1 17 7
112 and 1 21 111
113 ite 2 112 19 102
114 ite 2 52 113 110 1:3:MEM:1
115 eq 1 17 6
116 and 1 21 115
117 ite 2 116 19 97
118 ite 2 53 117 114 1:4:LOAD:0
119 next 2 13 118 accu_1

; mem variables - mem_<thread>
120 init 2 14 6
121 ite 2 46 100 14 0:3:MEM:0
122 next 2 14 121 mem_0

123 init 2 15 6
124 ite 2 52 113 15 1:3:MEM:1
125 next 2 15 124 mem_1

; store buffer address variables - sb-adr_<thread>
126 init 2 16 6
127 ite 2 44 6 16 0:1:STORE:0
128 next 2 16 127 sb-adr_0

129 init 2 17 6
130 ite 2 50 7 17 1:1:STORE:1
131 next 2 17 130 sb-adr_1

; store buffer value variables - sb-val_<thread>
132 init 2 18 6
133 ite 2 44 12 18 0:1:STORE:0
134 next 2 18 133 sb-val_0

135 init 2 19 6
136 ite 2 50 13 19 1:1:STORE:1
137 next 2 19 136 sb-val_1

; store buffer full variables - sb-full_<thread>
138 init 1 20 4
139 or 1 44 20
140 ite 1 41 4 139
141 next 1 20 140 sb-full_0

142 init 1 21 4
143 or 1 50 21
144 ite 1 42 4 143
145 next 1 21 144 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
146 init 1 22 5
147 and 1 22 -43 0:0:ADDI:1
148 next 1 22 147 stmt_0_0

149 init 1 23 4
150 and 1 23 -44 0:1:STORE:0
151 ite 1 22 43 150 0:0:ADDI:1
152 next 1 23 151 stmt_0_1

153 init 1 24 4
154 and 1 24 -45 0:2:FENCE
155 ite 1 23 44 154 0:1:STORE:0
156 next 1 24 155 stmt_0_2

157 init 1 25 4
158 and 1 25 -46 0:3:MEM:0
159 ite 1 24 45 158 0:2:FENCE
160 next 1 25 159 stmt_0_3

161 init 1 26 4
162 and 1 26 -47 0:4:LOAD:1
163 ite 1 25 46 162 0:3:MEM:0
164 next 1 26 163 stmt_0_4

165 init 1 27 4
166 and 1 27 -48 0:5:HALT
167 ite 1 26 47 166 0:4:LOAD:1
168 next 1 27 167 stmt_0_5

169 init 1 28 5
170 and 1 28 -49 1:0:ADDI:1
171 next 1 28 170 stmt_1_0

172 init 1 29 4
173 and 1 29 -50 1:1:STORE:1
174 ite 1 28 49 173 1:0:ADDI:1
175 next 1 29 174 stmt_1_1

176 init 1 30 4
177 and 1 30 -51 1:2:FENCE
178 ite 1 29 50 177 1:1:STORE:1
179 next 1 30 178 stmt_1_2

180 init 1 31 4
181 and 1 31 -52 1:3:MEM:1
182 ite 1 30 51 181 1:2:FENCE
183 next 1 31 182 stmt_1_3

184 init 1 32 4
185 and 1 32 -53 1:4:LOAD:0
186 ite 1 31 52 185 1:3:MEM:1
187 next 1 32 186 stmt_1_4

188 init 1 33 4
189 and 1 33 -54 1:5:HALT
190 ite 1 32 53 189 1:4:LOAD:0
191 next 1 33 190 stmt_1_5

; halt variables - halt_<thread>
192 init 1 34 4
193 or 1 48 34
194 next 1 34 193 halt_0

195 init 1 35 4
196 or 1 54 35
197 next 1 35 196 halt_1

; heap variable
198 init 3 36 11
199 write 3 36 16 18
200 ite 3 41 199 36 flush_0
201 write 3 36 17 19
202 ite 3 42 201 200 flush_1
203 next 3 36 202 heap

; exit flag variable
204 init 1 37 4
205 and 1 193 196
206 or 1 37 205
207 next 1 37 206 exit

; exit code variable
208 init 2 38 6
209 next 2 38 38 exit-code

