;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 14

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3
26 state 1 stmt_0_4
27 state 1 stmt_0_5

28 state 1 stmt_1_0
29 state 1 stmt_1_1
30 state 1 stmt_1_2
31 state 1 stmt_1_3
32 state 1 stmt_1_4
33 state 1 stmt_1_5

; halt variables - halt_<thread>
34 state 1 halt_0
35 state 1 halt_1

; heap variable
36 state 3 heap

; exit flag variable
37 state 1 exit

; exit code variable
38 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
39 input 1 thread_0
40 input 1 thread_1

; store buffer flush variables - flush_<thread>
41 input 1 flush_0
42 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
43 and 1 22 39 exec_0_0
44 and 1 23 39 exec_0_1
45 and 1 24 39 exec_0_2
46 and 1 25 39 exec_0_3
47 and 1 26 39 exec_0_4
48 and 1 27 39 exec_0_5

49 and 1 28 40 exec_1_0
50 and 1 29 40 exec_1_1
51 and 1 30 40 exec_1_2
52 and 1 31 40 exec_1_3
53 and 1 32 40 exec_1_4
54 and 1 33 40 exec_1_5

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
55 init 2 12 6
56 add 2 12 7
57 ite 2 43 56 12 0:0:ADDI:1
58 read 2 36 6
59 eq 1 16 6
60 and 1 20 59
61 ite 2 60 18 58
62 ite 2 46 61 57 0:3:MEM:0
63 read 2 36 7
64 eq 1 16 7
65 and 1 20 64
66 ite 2 65 18 63
67 ite 2 47 66 62 0:4:LOAD:1
68 next 2 12 67 accu_0

69 init 2 13 6
70 add 2 13 7
71 ite 2 49 70 13 1:0:ADDI:1
72 eq 1 17 7
73 and 1 21 72
74 ite 2 73 19 63
75 ite 2 52 74 71 1:3:MEM:1
76 eq 1 17 6
77 and 1 21 76
78 ite 2 77 19 58
79 ite 2 53 78 75 1:4:LOAD:0
80 next 2 13 79 accu_1

; mem variables - mem_<thread>
81 init 2 14 6
82 ite 2 46 61 14 0:3:MEM:0
83 next 2 14 82 mem_0

84 init 2 15 6
85 ite 2 52 74 15 1:3:MEM:1
86 next 2 15 85 mem_1

; store buffer address variables - sb-adr_<thread>
87 init 2 16 6
88 ite 2 44 6 16 0:1:STORE:0
89 next 2 16 88 sb-adr_0

90 init 2 17 6
91 ite 2 50 7 17 1:1:STORE:1
92 next 2 17 91 sb-adr_1

; store buffer value variables - sb-val_<thread>
93 init 2 18 6
94 ite 2 44 12 18 0:1:STORE:0
95 next 2 18 94 sb-val_0

96 init 2 19 6
97 ite 2 50 13 19 1:1:STORE:1
98 next 2 19 97 sb-val_1

; store buffer full variables - sb-full_<thread>
99 init 1 20 4
100 or 1 44 20
101 ite 1 41 4 100
102 next 1 20 101 sb-full_0

103 init 1 21 4
104 or 1 50 21
105 ite 1 42 4 104
106 next 1 21 105 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
107 init 1 22 5
108 and 1 22 -43 0:0:ADDI:1
109 next 1 22 108 stmt_0_0

110 init 1 23 4
111 and 1 23 -44 0:1:STORE:0
112 ite 1 22 43 111 0:0:ADDI:1
113 next 1 23 112 stmt_0_1

114 init 1 24 4
115 and 1 24 -45 0:2:FENCE
116 ite 1 23 44 115 0:1:STORE:0
117 next 1 24 116 stmt_0_2

118 init 1 25 4
119 and 1 25 -46 0:3:MEM:0
120 ite 1 24 45 119 0:2:FENCE
121 next 1 25 120 stmt_0_3

122 init 1 26 4
123 and 1 26 -47 0:4:LOAD:1
124 ite 1 25 46 123 0:3:MEM:0
125 next 1 26 124 stmt_0_4

126 init 1 27 4
127 and 1 27 -48 0:5:HALT
128 ite 1 26 47 127 0:4:LOAD:1
129 next 1 27 128 stmt_0_5

130 init 1 28 5
131 and 1 28 -49 1:0:ADDI:1
132 next 1 28 131 stmt_1_0

133 init 1 29 4
134 and 1 29 -50 1:1:STORE:1
135 ite 1 28 49 134 1:0:ADDI:1
136 next 1 29 135 stmt_1_1

137 init 1 30 4
138 and 1 30 -51 1:2:FENCE
139 ite 1 29 50 138 1:1:STORE:1
140 next 1 30 139 stmt_1_2

141 init 1 31 4
142 and 1 31 -52 1:3:MEM:1
143 ite 1 30 51 142 1:2:FENCE
144 next 1 31 143 stmt_1_3

145 init 1 32 4
146 and 1 32 -53 1:4:LOAD:0
147 ite 1 31 52 146 1:3:MEM:1
148 next 1 32 147 stmt_1_4

149 init 1 33 4
150 and 1 33 -54 1:5:HALT
151 ite 1 32 53 150 1:4:LOAD:0
152 next 1 33 151 stmt_1_5

; halt variables - halt_<thread>
153 init 1 34 4
154 or 1 48 34
155 next 1 34 154 halt_0

156 init 1 35 4
157 or 1 54 35
158 next 1 35 157 halt_1

; heap variable
159 init 3 36 11
160 write 3 36 16 18
161 ite 3 41 160 36 flush_0
162 write 3 36 17 19
163 ite 3 42 162 161 flush_1
164 next 3 36 163 heap

; exit flag variable
165 init 1 37 4
166 and 1 154 157
167 or 1 37 166
168 next 1 37 167 exit

; exit code variable
169 init 2 38 6
170 next 2 38 38 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

171 or 1 39 40
172 or 1 41 171
173 or 1 42 172
174 or 1 37 173
175 constraint 174
176 nand 1 39 40
177 nand 1 39 41
178 nand 1 39 42
179 nand 1 39 37
180 nand 1 40 41
181 nand 1 40 42
182 nand 1 40 37
183 nand 1 41 42
184 nand 1 41 37
185 nand 1 42 37
186 and 1 176 177
187 and 1 178 186
188 and 1 179 187
189 and 1 180 188
190 and 1 181 189
191 and 1 182 190
192 and 1 183 191
193 and 1 184 192
194 and 1 185 193
195 constraint 194

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

196 or 1 23 24
197 or 1 27 196
198 implies 1 197 -39
199 ite 1 20 198 -41
200 constraint 199 flush_0

201 or 1 29 30
202 or 1 33 201
203 implies 1 202 -40
204 ite 1 21 203 -42
205 constraint 204 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

206 implies 1 34 -39
207 constraint 206 halt_0

208 implies 1 35 -40
209 constraint 208 halt_1

