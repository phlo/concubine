;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3
26 state 1 stmt_0_4

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4

; halt variables - halt_<thread>
32 state 1 halt_0
33 state 1 halt_1

; heap variable
34 state 3 heap

; exit flag variable
35 state 1 exit

; exit code variable
36 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
37 input 1 thread_0
38 input 1 thread_1

; store buffer flush variables - flush_<thread>
39 input 1 flush_0
40 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
41 and 1 22 37 exec_0_0
42 and 1 23 37 exec_0_1
43 and 1 24 37 exec_0_2
44 and 1 25 37 exec_0_3
45 and 1 26 37 exec_0_4

46 and 1 27 38 exec_1_0
47 and 1 28 38 exec_1_1
48 and 1 29 38 exec_1_2
49 and 1 30 38 exec_1_3
50 and 1 31 38 exec_1_4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
51 init 2 12 6
52 add 2 12 7
53 ite 2 41 52 12 0:0:ADDI:1
54 read 2 34 6
55 eq 1 16 6
56 and 1 20 55
57 ite 2 56 18 54
58 ite 2 43 57 53 0:2:MEM:0
59 read 2 34 7
60 eq 1 16 7
61 and 1 20 60
62 ite 2 61 18 59
63 ite 2 44 62 58 0:3:LOAD:1
64 next 2 12 63 accu_0

65 init 2 13 6
66 add 2 13 7
67 ite 2 46 66 13 1:0:ADDI:1
68 eq 1 17 7
69 and 1 21 68
70 ite 2 69 19 59
71 ite 2 48 70 67 1:2:MEM:1
72 eq 1 17 6
73 and 1 21 72
74 ite 2 73 19 54
75 ite 2 49 74 71 1:3:LOAD:0
76 next 2 13 75 accu_1

; mem variables - mem_<thread>
77 init 2 14 6
78 ite 2 43 57 14 0:2:MEM:0
79 next 2 14 78 mem_0

80 init 2 15 6
81 ite 2 48 70 15 1:2:MEM:1
82 next 2 15 81 mem_1

; store buffer address variables - sb-adr_<thread>
83 init 2 16 6
84 ite 2 42 6 16 0:1:STORE:0
85 next 2 16 84 sb-adr_0

86 init 2 17 6
87 ite 2 47 7 17 1:1:STORE:1
88 next 2 17 87 sb-adr_1

; store buffer value variables - sb-val_<thread>
89 init 2 18 6
90 ite 2 42 12 18 0:1:STORE:0
91 next 2 18 90 sb-val_0

92 init 2 19 6
93 ite 2 47 13 19 1:1:STORE:1
94 next 2 19 93 sb-val_1

; store buffer full variables - sb-full_<thread>
95 init 1 20 4
96 or 1 42 20
97 ite 1 39 4 96
98 next 1 20 97 sb-full_0

99 init 1 21 4
100 or 1 47 21
101 ite 1 40 4 100
102 next 1 21 101 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
103 init 1 22 5
104 and 1 22 -41 0:0:ADDI:1
105 next 1 22 104 stmt_0_0

106 init 1 23 4
107 and 1 23 -42 0:1:STORE:0
108 ite 1 22 41 107 0:0:ADDI:1
109 next 1 23 108 stmt_0_1

110 init 1 24 4
111 and 1 24 -43 0:2:MEM:0
112 ite 1 23 42 111 0:1:STORE:0
113 next 1 24 112 stmt_0_2

114 init 1 25 4
115 and 1 25 -44 0:3:LOAD:1
116 ite 1 24 43 115 0:2:MEM:0
117 next 1 25 116 stmt_0_3

118 init 1 26 4
119 and 1 26 -45 0:4:HALT
120 ite 1 25 44 119 0:3:LOAD:1
121 next 1 26 120 stmt_0_4

122 init 1 27 5
123 and 1 27 -46 1:0:ADDI:1
124 next 1 27 123 stmt_1_0

125 init 1 28 4
126 and 1 28 -47 1:1:STORE:1
127 ite 1 27 46 126 1:0:ADDI:1
128 next 1 28 127 stmt_1_1

129 init 1 29 4
130 and 1 29 -48 1:2:MEM:1
131 ite 1 28 47 130 1:1:STORE:1
132 next 1 29 131 stmt_1_2

133 init 1 30 4
134 and 1 30 -49 1:3:LOAD:0
135 ite 1 29 48 134 1:2:MEM:1
136 next 1 30 135 stmt_1_3

137 init 1 31 4
138 and 1 31 -50 1:4:HALT
139 ite 1 30 49 138 1:3:LOAD:0
140 next 1 31 139 stmt_1_4

; halt variables - halt_<thread>
141 init 1 32 4
142 or 1 45 32
143 next 1 32 142 halt_0

144 init 1 33 4
145 or 1 50 33
146 next 1 33 145 halt_1

; heap variable
147 init 3 34 11
148 write 3 34 16 18
149 ite 3 39 148 34 flush_0
150 write 3 34 17 19
151 ite 3 40 150 149 flush_1
152 next 3 34 151 heap

; exit flag variable
153 init 1 35 4
154 and 1 142 145
155 or 1 35 154
156 next 1 35 155 exit

; exit code variable
157 init 2 36 6
158 next 2 36 36 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

159 or 1 37 38
160 or 1 39 159
161 or 1 40 160
162 or 1 35 161
163 constraint 162
164 nand 1 37 38
165 nand 1 37 39
166 nand 1 37 40
167 nand 1 37 35
168 nand 1 38 39
169 nand 1 38 40
170 nand 1 38 35
171 nand 1 39 40
172 nand 1 39 35
173 nand 1 40 35
174 and 1 164 165
175 and 1 166 174
176 and 1 167 175
177 and 1 168 176
178 and 1 169 177
179 and 1 170 178
180 and 1 171 179
181 and 1 172 180
182 and 1 173 181
183 constraint 182

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

184 or 1 23 26
185 implies 1 184 -37
186 ite 1 20 185 -39
187 constraint 186 flush_0

188 or 1 28 31
189 implies 1 188 -38
190 ite 1 21 189 -40
191 constraint 190 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

192 implies 1 32 -37
193 constraint 192 halt_0

194 implies 1 33 -38
195 constraint 194 halt_1

