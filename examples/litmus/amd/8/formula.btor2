;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

9 state 3 mmap
10 write 3 9 6 6
11 write 3 10 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
12 state 2 accu_0
13 state 2 accu_1

; mem variables - mem_<thread>
14 state 2 mem_0
15 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
16 state 2 sb-adr_0
17 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
18 state 2 sb-val_0
19 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
20 state 1 sb-full_0
21 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
22 state 1 stmt_0_0
23 state 1 stmt_0_1
24 state 1 stmt_0_2
25 state 1 stmt_0_3
26 state 1 stmt_0_4

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4

; halt variables - halt_<thread>
32 state 1 halt_0
33 state 1 halt_1

; heap variable
34 state 3 heap

; exit flag variable
35 state 1 exit

; exit code variable
36 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
37 input 1 thread_0
38 input 1 thread_1

; store buffer flush variables - flush_<thread>
39 input 1 flush_0
40 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
41 and 1 22 37 exec_0_0
42 and 1 23 37 exec_0_1
43 and 1 24 37 exec_0_2
44 and 1 25 37 exec_0_3
45 and 1 26 37 exec_0_4

46 and 1 27 38 exec_1_0
47 and 1 28 38 exec_1_1
48 and 1 29 38 exec_1_2
49 and 1 30 38 exec_1_3
50 and 1 31 38 exec_1_4

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

51 or 1 37 38
52 or 1 39 51
53 or 1 40 52
54 or 1 35 53
55 constraint 54
56 nand 1 37 38
57 nand 1 37 39
58 nand 1 37 40
59 nand 1 37 35
60 nand 1 38 39
61 nand 1 38 40
62 nand 1 38 35
63 nand 1 39 40
64 nand 1 39 35
65 nand 1 40 35
66 and 1 56 57
67 and 1 58 66
68 and 1 59 67
69 and 1 60 68
70 and 1 61 69
71 and 1 62 70
72 and 1 63 71
73 and 1 64 72
74 and 1 65 73
75 constraint 74

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

76 or 1 23 26
77 implies 1 76 -37
78 ite 1 20 77 -39
79 constraint 78 flush_0

80 or 1 28 31
81 implies 1 80 -38
82 ite 1 21 81 -40
83 constraint 82 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

84 implies 1 32 -37
85 constraint 84 halt_0

86 implies 1 33 -38
87 constraint 86 halt_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
88 init 2 12 6
89 add 2 12 7
90 ite 2 41 89 12 0:0:ADDI:1
91 read 2 34 6
92 eq 1 16 6
93 and 1 20 92
94 ite 2 93 18 91
95 ite 2 43 94 90 0:2:MEM:0
96 read 2 34 7
97 eq 1 16 7
98 and 1 20 97
99 ite 2 98 18 96
100 ite 2 44 99 95 0:3:LOAD:1
101 next 2 12 100 accu_0

102 init 2 13 6
103 add 2 13 7
104 ite 2 46 103 13 1:0:ADDI:1
105 eq 1 17 7
106 and 1 21 105
107 ite 2 106 19 96
108 ite 2 48 107 104 1:2:MEM:1
109 eq 1 17 6
110 and 1 21 109
111 ite 2 110 19 91
112 ite 2 49 111 108 1:3:LOAD:0
113 next 2 13 112 accu_1

; mem variables - mem_<thread>
114 init 2 14 6
115 ite 2 43 94 14 0:2:MEM:0
116 next 2 14 115 mem_0

117 init 2 15 6
118 ite 2 48 107 15 1:2:MEM:1
119 next 2 15 118 mem_1

; store buffer address variables - sb-adr_<thread>
120 init 2 16 6
121 ite 2 42 6 16 0:1:STORE:0
122 next 2 16 121 sb-adr_0

123 init 2 17 6
124 ite 2 47 7 17 1:1:STORE:1
125 next 2 17 124 sb-adr_1

; store buffer value variables - sb-val_<thread>
126 init 2 18 6
127 ite 2 42 12 18 0:1:STORE:0
128 next 2 18 127 sb-val_0

129 init 2 19 6
130 ite 2 47 13 19 1:1:STORE:1
131 next 2 19 130 sb-val_1

; store buffer full variables - sb-full_<thread>
132 init 1 20 4
133 or 1 42 20
134 ite 1 39 4 133
135 next 1 20 134 sb-full_0

136 init 1 21 4
137 or 1 47 21
138 ite 1 40 4 137
139 next 1 21 138 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
140 init 1 22 5
141 and 1 22 -41 0:0:ADDI:1
142 next 1 22 141 stmt_0_0

143 init 1 23 4
144 and 1 23 -42 0:1:STORE:0
145 ite 1 22 41 144 0:0:ADDI:1
146 next 1 23 145 stmt_0_1

147 init 1 24 4
148 and 1 24 -43 0:2:MEM:0
149 ite 1 23 42 148 0:1:STORE:0
150 next 1 24 149 stmt_0_2

151 init 1 25 4
152 and 1 25 -44 0:3:LOAD:1
153 ite 1 24 43 152 0:2:MEM:0
154 next 1 25 153 stmt_0_3

155 init 1 26 4
156 and 1 26 -45 0:4:HALT
157 ite 1 25 44 156 0:3:LOAD:1
158 next 1 26 157 stmt_0_4

159 init 1 27 5
160 and 1 27 -46 1:0:ADDI:1
161 next 1 27 160 stmt_1_0

162 init 1 28 4
163 and 1 28 -47 1:1:STORE:1
164 ite 1 27 46 163 1:0:ADDI:1
165 next 1 28 164 stmt_1_1

166 init 1 29 4
167 and 1 29 -48 1:2:MEM:1
168 ite 1 28 47 167 1:1:STORE:1
169 next 1 29 168 stmt_1_2

170 init 1 30 4
171 and 1 30 -49 1:3:LOAD:0
172 ite 1 29 48 171 1:2:MEM:1
173 next 1 30 172 stmt_1_3

174 init 1 31 4
175 and 1 31 -50 1:4:HALT
176 ite 1 30 49 175 1:3:LOAD:0
177 next 1 31 176 stmt_1_4

; halt variables - halt_<thread>
178 init 1 32 4
179 or 1 45 32
180 next 1 32 179 halt_0

181 init 1 33 4
182 or 1 50 33
183 next 1 33 182 halt_1

; heap variable
184 init 3 34 11
185 write 3 34 16 18
186 ite 3 39 185 34 flush_0
187 write 3 34 17 19
188 ite 3 40 187 186 flush_1
189 next 3 34 188 heap

; exit flag variable
190 init 1 35 4
191 and 1 179 182
192 or 1 35 191
193 next 1 35 192 exit

; exit code variable
194 init 2 36 6
195 next 2 36 36 exit-code

