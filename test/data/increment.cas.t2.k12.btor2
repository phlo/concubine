;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1
6 zero 2
7 one 2
8 constd 2 2
9 constd 2 12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
10 state 2 k
11 init 2 10 6
12 add 2 7 10
13 next 2 10 12

; bound (12)
14 eq 1 9 10
15 bad 14

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; states
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; heap
16 state 3 heap

; accumulator
17 state 2 accu_0
18 init 2 17 6
19 state 2 accu_1
20 init 2 19 6

; CAS memory register
21 state 2 mem_0
22 init 2 21 6
23 state 2 mem_1
24 init 2 23 6

; statement activation
25 state 1 stmt_0_0
26 init 1 25 5
27 state 1 stmt_0_1
28 init 1 27 4
29 state 1 stmt_0_2
30 init 1 29 4
31 state 1 stmt_0_3
32 init 1 31 4
33 state 1 stmt_0_4
34 init 1 33 4
35 state 1 stmt_0_5
36 init 1 35 4

37 state 1 stmt_1_0
38 init 1 37 5
39 state 1 stmt_1_1
40 init 1 39 4
41 state 1 stmt_1_2
42 init 1 41 4
43 state 1 stmt_1_3
44 init 1 43 4
45 state 1 stmt_1_4
46 init 1 45 4
47 state 1 stmt_1_5
48 init 1 47 4

; exit flag
49 state 1 exit
50 init 1 49 4

; exit code
51 state 2 exit-code
52 init 2 51 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; thread scheduling
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

53 input 1 thread_0
54 input 1 thread_1

; cardinality constraint
55 or 1 53 54
56 or 1 49 55
57 constraint 56
58 nand 1 53 54
59 nand 1 53 49
60 nand 1 54 49
61 and 1 58 59
62 and 1 60 61
63 constraint 62

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; synchronization constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; negated thread activation variables
64 not 1 53 not_thread_0
65 not 1 54 not_thread_1

; synchronization condition sync_0
66 and 1 27 39 sync_0
67 not 1 66 not_sync_0

; disable threads waiting for barrier 0
68 and 1 27 67
69 implies 1 68 64
70 constraint 69 sync_0_block_0

71 and 1 39 67
72 implies 1 71 65
73 constraint 72 sync_0_block_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; statement execution - shorthand for statement & thread activation
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

74 and 1 25 53 exec_0_0
75 and 1 27 66 exec_0_1
76 and 1 29 53 exec_0_2
77 and 1 31 53 exec_0_3
78 and 1 33 53 exec_0_4
79 and 1 35 53 exec_0_5

80 and 1 37 54 exec_1_0
81 and 1 39 66 exec_1_1
82 and 1 41 54 exec_1_2
83 and 1 43 54 exec_1_3
84 and 1 45 54 exec_1_4
85 and 1 47 54 exec_1_5

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state updates
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; update statement activation ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; stmt_0_0
86 not 1 74
87 and 1 25 86
88 next 1 25 87 0:0:STORE:0

; stmt_0_1
89 not 1 75
90 and 1 27 89
91 ite 1 25 74 90 0:0:STORE:0
92 next 1 27 91 0:1:SYNC:0

; stmt_0_2
93 not 1 76
94 and 1 29 93
95 ite 1 27 75 94 0:1:SYNC:0
96 ite 1 35 79 95 0:5:JMP:2
97 next 1 29 96 0:2:MEM:0

; stmt_0_3
98 not 1 77
99 and 1 31 98
100 ite 1 29 76 99 0:2:MEM:0
101 next 1 31 100 0:3:ADDI:1

; stmt_0_4
102 not 1 78
103 and 1 33 102
104 ite 1 31 77 103 0:3:ADDI:1
105 next 1 33 104 0:4:CAS:0

; stmt_0_5
106 not 1 79
107 and 1 35 106
108 ite 1 33 78 107 0:4:CAS:0
109 next 1 35 108 0:5:JMP:2

; stmt_1_0
110 not 1 80
111 and 1 37 110
112 next 1 37 111 1:0:STORE:0

; stmt_1_1
113 not 1 81
114 and 1 39 113
115 ite 1 37 80 114 1:0:STORE:0
116 next 1 39 115 1:1:SYNC:0

; stmt_1_2
117 not 1 82
118 and 1 41 117
119 ite 1 39 81 118 1:1:SYNC:0
120 ite 1 47 85 119 1:5:JMP:2
121 next 1 41 120 1:2:MEM:0

; stmt_1_3
122 not 1 83
123 and 1 43 122
124 ite 1 41 82 123 1:2:MEM:0
125 next 1 43 124 1:3:ADDI:1

; stmt_1_4
126 not 1 84
127 and 1 45 126
128 ite 1 43 83 127 1:3:ADDI:1
129 next 1 45 128 1:4:CAS:0

; stmt_1_5
130 not 1 85
131 and 1 47 130
132 ite 1 45 84 131 1:4:CAS:0
133 next 1 47 132 1:5:JMP:2

; update accu ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu_0
134 read 2 16 6
135 ite 2 76 134 17 0:2:MEM:0
136 add 2 17 7
137 ite 2 77 136 135 0:3:ADDI:1
138 eq 1 21 134
139 ite 2 138 7 6
140 ite 2 78 139 137 0:4:CAS:0
141 next 2 17 140

; accu_1
142 ite 2 82 134 19 1:2:MEM:0
143 add 2 19 7
144 ite 2 83 143 142 1:3:ADDI:1
145 eq 1 23 134
146 ite 2 145 7 6
147 ite 2 84 146 144 1:4:CAS:0
148 next 2 19 147

; update CAS memory register ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; mem_0
149 ite 2 76 134 21 0:2:MEM:0
150 next 2 21 149

; mem_1
151 ite 2 82 134 23 1:2:MEM:0
152 next 2 23 151

; update heap ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

153 write 3 16 6 17
154 ite 3 74 153 16 0:0:STORE:0
155 eq 1 21 134
156 ite 3 155 153 16
157 ite 3 78 156 154 0:4:CAS:0
158 write 3 16 6 19
159 ite 3 80 158 157 1:0:STORE:0
160 eq 1 23 134
161 ite 3 160 158 16
162 ite 3 84 161 159 1:4:CAS:0
163 next 3 16 162

; update exit flag ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

164 next 1 49 49

; update exit code ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

165 next 2 51 51

