;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 3
9 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
10 state 2 accu_0
11 state 2 accu_1

; mem variables - mem_<thread>
12 state 2 mem_0
13 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
14 state 2 sb-adr_0
15 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
16 state 2 sb-val_0
17 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
18 state 1 sb-full_0
19 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
20 state 1 stmt_0_0
21 state 1 stmt_0_1
22 state 1 stmt_0_2
23 state 1 stmt_0_3
24 state 1 stmt_0_4
25 state 1 stmt_0_5
26 state 1 stmt_0_6

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4
32 state 1 stmt_1_5
33 state 1 stmt_1_6

; blocking variables - block_<id>_<thread>
34 state 1 block_0_0
35 state 1 block_0_1

; heap variable
36 state 3 heap

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
37 input 1 thread_0
38 input 1 thread_1

; store buffer flush variables - flush_<thread>
39 input 1 flush_0
40 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
41 and 1 20 37 exec_0_0
42 and 1 21 37 exec_0_1
43 and 1 22 37 exec_0_2
44 and 1 23 37 exec_0_3
45 and 1 24 37 exec_0_4
46 and 1 25 37 exec_0_5
47 and 1 26 37 exec_0_6

48 and 1 27 38 exec_1_0
49 and 1 28 38 exec_1_1
50 and 1 29 38 exec_1_2
51 and 1 30 38 exec_1_3
52 and 1 31 38 exec_1_4
53 and 1 32 38 exec_1_5
54 and 1 33 38 exec_1_6

; checkpoint variables - check_<id>
55 and 1 34 35 check_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
56 init 2 10 6
57 read 2 36 6
58 eq 1 14 6
59 and 1 18 58
60 ite 2 59 16 57
61 ite 2 44 60 10 0:3:MEM:0
62 add 2 10 7
63 ite 2 45 62 61 0:4:ADDI:1
64 eq 1 12 60
65 ite 2 64 7 6
66 ite 2 46 65 63 0:5:CAS:0
67 next 2 10 66 accu_0

68 init 2 11 6
69 eq 1 15 6
70 and 1 19 69
71 ite 2 70 17 57
72 ite 2 51 71 11 1:3:MEM:0
73 add 2 11 7
74 ite 2 52 73 72 1:4:ADDI:1
75 eq 1 13 71
76 ite 2 75 7 6
77 ite 2 53 76 74 1:5:CAS:0
78 next 2 11 77 accu_1

; mem variables - mem_<thread>
79 init 2 12 6
80 ite 2 44 60 12 0:3:MEM:0
81 next 2 12 80 mem_0

82 init 2 13 6
83 ite 2 51 71 13 1:3:MEM:0
84 next 2 13 83 mem_1

; store buffer address variables - sb-adr_<thread>
85 init 2 14 6
86 ite 2 41 6 14 0:0:STORE:0
87 next 2 14 86 sb-adr_0

88 init 2 15 6
89 ite 2 48 6 15 1:0:STORE:0
90 next 2 15 89 sb-adr_1

; store buffer value variables - sb-val_<thread>
91 init 2 16 6
92 ite 2 41 10 16 0:0:STORE:0
93 next 2 16 92 sb-val_0

94 init 2 17 6
95 ite 2 48 11 17 1:0:STORE:0
96 next 2 17 95 sb-val_1

; store buffer full variables - sb-full_<thread>
97 init 1 18 4
98 or 1 41 18
99 ite 1 39 4 98
100 next 1 18 99 sb-full_0

101 init 1 19 4
102 or 1 48 19
103 ite 1 40 4 102
104 next 1 19 103 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
105 init 1 20 5
106 and 1 20 -41 0:0:STORE:0
107 next 1 20 106 stmt_0_0

108 init 1 21 4
109 and 1 21 -42 0:1:FENCE
110 ite 1 20 41 109 0:0:STORE:0
111 next 1 21 110 stmt_0_1

112 init 1 22 4
113 and 1 22 -43 0:2:CHECK:0
114 ite 1 21 42 113 0:1:FENCE
115 next 1 22 114 stmt_0_2

116 init 1 23 4
117 and 1 23 -44 0:3:MEM:0
118 ite 1 22 43 117 0:2:CHECK:0
119 ite 1 26 47 118 0:6:JMP:3
120 next 1 23 119 stmt_0_3

121 init 1 24 4
122 and 1 24 -45 0:4:ADDI:1
123 ite 1 23 44 122 0:3:MEM:0
124 next 1 24 123 stmt_0_4

125 init 1 25 4
126 and 1 25 -46 0:5:CAS:0
127 ite 1 24 45 126 0:4:ADDI:1
128 next 1 25 127 stmt_0_5

129 init 1 26 4
130 and 1 26 -47 0:6:JMP:3
131 ite 1 25 46 130 0:5:CAS:0
132 next 1 26 131 stmt_0_6

133 init 1 27 5
134 and 1 27 -48 1:0:STORE:0
135 next 1 27 134 stmt_1_0

136 init 1 28 4
137 and 1 28 -49 1:1:FENCE
138 ite 1 27 48 137 1:0:STORE:0
139 next 1 28 138 stmt_1_1

140 init 1 29 4
141 and 1 29 -50 1:2:CHECK:0
142 ite 1 28 49 141 1:1:FENCE
143 next 1 29 142 stmt_1_2

144 init 1 30 4
145 and 1 30 -51 1:3:MEM:0
146 ite 1 29 50 145 1:2:CHECK:0
147 ite 1 33 54 146 1:6:JMP:3
148 next 1 30 147 stmt_1_3

149 init 1 31 4
150 and 1 31 -52 1:4:ADDI:1
151 ite 1 30 51 150 1:3:MEM:0
152 next 1 31 151 stmt_1_4

153 init 1 32 4
154 and 1 32 -53 1:5:CAS:0
155 ite 1 31 52 154 1:4:ADDI:1
156 next 1 32 155 stmt_1_5

157 init 1 33 4
158 and 1 33 -54 1:6:JMP:3
159 ite 1 32 53 158 1:5:CAS:0
160 next 1 33 159 stmt_1_6

; blocking variables - block_<id>_<thread>
161 init 1 34 4
162 or 1 43 34
163 ite 1 55 4 162
164 next 1 34 163 block_0_0

165 init 1 35 4
166 or 1 50 35
167 ite 1 55 4 166
168 next 1 35 167 block_0_1

; heap variable
169 write 3 36 14 16
170 ite 3 39 169 36 flush_0
171 write 3 36 6 10
172 ite 3 64 171 36
173 ite 3 46 172 170 0:5:CAS:0
174 write 3 36 15 17
175 ite 3 40 174 173 flush_1
176 write 3 36 6 11
177 ite 3 75 176 36
178 ite 3 53 177 175 1:5:CAS:0
179 next 3 36 178 heap

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

180 or 1 37 38
181 or 1 39 180
182 or 1 40 181
183 constraint 182
184 nand 1 37 38
185 nand 1 37 39
186 nand 1 37 40
187 nand 1 38 39
188 nand 1 38 40
189 nand 1 39 40
190 and 1 184 185
191 and 1 186 190
192 and 1 187 191
193 and 1 188 192
194 and 1 189 193
195 constraint 194

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

196 or 1 20 21
197 or 1 25 196
198 implies 1 197 -37
199 ite 1 18 198 -39
200 constraint 199

201 or 1 27 28
202 or 1 32 201
203 implies 1 202 -38
204 ite 1 19 203 -40
205 constraint 204

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; checkpoint constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

206 and 1 34 -55
207 implies 1 206 -37
208 constraint 207 block_0_0

209 and 1 35 -55
210 implies 1 209 -38
211 constraint 210 block_0_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
212 state 2 k
213 init 2 212 6
214 add 2 7 212
215 next 2 212 214

; bound (16)
216 eq 1 9 212
217 bad 216
