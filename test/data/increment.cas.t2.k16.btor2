;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 2
9 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
10 state 2 accu_0
11 state 2 accu_1

; mem variables - mem_<thread>
12 state 2 mem_0
13 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
14 state 2 sb-adr_0
15 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
16 state 2 sb-val_0
17 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
18 state 1 sb-full_0
19 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
20 state 1 stmt_0_0
21 state 1 stmt_0_1
22 state 1 stmt_0_2
23 state 1 stmt_0_3
24 state 1 stmt_0_4
25 state 1 stmt_0_5

26 state 1 stmt_1_0
27 state 1 stmt_1_1
28 state 1 stmt_1_2
29 state 1 stmt_1_3
30 state 1 stmt_1_4
31 state 1 stmt_1_5

; blocking variables - block_<id>_<thread>
32 state 1 block_0_0
33 state 1 block_0_1

; heap variable
34 state 3 heap

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
35 input 1 thread_0
36 input 1 thread_1

; store buffer flush variables - flush_<thread>
37 input 1 flush_0
38 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
39 and 1 20 35 exec_0_0
40 and 1 21 35 exec_0_1
41 and 1 22 35 exec_0_2
42 and 1 23 35 exec_0_3
43 and 1 24 35 exec_0_4
44 and 1 25 35 exec_0_5

45 and 1 26 36 exec_1_0
46 and 1 27 36 exec_1_1
47 and 1 28 36 exec_1_2
48 and 1 29 36 exec_1_3
49 and 1 30 36 exec_1_4
50 and 1 31 36 exec_1_5

; checkpoint variables - check_<id>
51 and 1 32 33 check_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
52 init 2 10 6
53 read 2 34 6
54 eq 1 14 6
55 and 1 18 54
56 ite 2 55 16 53
57 ite 2 41 56 10 0:2:MEM:0
58 add 2 10 7
59 ite 2 42 58 57 0:3:ADDI:1
60 eq 1 12 56
61 ite 2 60 7 6
62 ite 2 43 61 59 0:4:CAS:0
63 next 2 10 62 accu_0

64 init 2 11 6
65 eq 1 15 6
66 and 1 19 65
67 ite 2 66 17 53
68 ite 2 47 67 11 1:2:MEM:0
69 add 2 11 7
70 ite 2 48 69 68 1:3:ADDI:1
71 eq 1 13 67
72 ite 2 71 7 6
73 ite 2 49 72 70 1:4:CAS:0
74 next 2 11 73 accu_1

; mem variables - mem_<thread>
75 init 2 12 6
76 ite 2 41 56 12 0:2:MEM:0
77 next 2 12 76 mem_0

78 init 2 13 6
79 ite 2 47 67 13 1:2:MEM:0
80 next 2 13 79 mem_1

; store buffer address variables - sb-adr_<thread>
81 init 2 14 6
82 ite 2 39 6 14 0:0:STORE:0
83 next 2 14 82 sb-adr_0

84 init 2 15 6
85 ite 2 45 6 15 1:0:STORE:0
86 next 2 15 85 sb-adr_1

; store buffer value variables - sb-val_<thread>
87 init 2 16 6
88 ite 2 39 10 16 0:0:STORE:0
89 next 2 16 88 sb-val_0

90 init 2 17 6
91 ite 2 45 11 17 1:0:STORE:0
92 next 2 17 91 sb-val_1

; store buffer full variables - sb-full_<thread>
93 init 1 18 4
94 or 1 39 18
95 ite 1 37 4 94
96 next 1 18 95 sb-full_0

97 init 1 19 4
98 or 1 45 19
99 ite 1 38 4 98
100 next 1 19 99 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
101 init 1 20 5
102 and 1 20 -39 0:0:STORE:0
103 next 1 20 102 stmt_0_0

104 init 1 21 4
105 and 1 21 -40 0:1:CHECK:0
106 ite 1 20 39 105 0:0:STORE:0
107 next 1 21 106 stmt_0_1

108 init 1 22 4
109 and 1 22 -41 0:2:MEM:0
110 ite 1 21 40 109 0:1:CHECK:0
111 ite 1 25 44 110 0:5:JMP:2
112 next 1 22 111 stmt_0_2

113 init 1 23 4
114 and 1 23 -42 0:3:ADDI:1
115 ite 1 22 41 114 0:2:MEM:0
116 next 1 23 115 stmt_0_3

117 init 1 24 4
118 and 1 24 -43 0:4:CAS:0
119 ite 1 23 42 118 0:3:ADDI:1
120 next 1 24 119 stmt_0_4

121 init 1 25 4
122 and 1 25 -44 0:5:JMP:2
123 ite 1 24 43 122 0:4:CAS:0
124 next 1 25 123 stmt_0_5

125 init 1 26 5
126 and 1 26 -45 1:0:STORE:0
127 next 1 26 126 stmt_1_0

128 init 1 27 4
129 and 1 27 -46 1:1:CHECK:0
130 ite 1 26 45 129 1:0:STORE:0
131 next 1 27 130 stmt_1_1

132 init 1 28 4
133 and 1 28 -47 1:2:MEM:0
134 ite 1 27 46 133 1:1:CHECK:0
135 ite 1 31 50 134 1:5:JMP:2
136 next 1 28 135 stmt_1_2

137 init 1 29 4
138 and 1 29 -48 1:3:ADDI:1
139 ite 1 28 47 138 1:2:MEM:0
140 next 1 29 139 stmt_1_3

141 init 1 30 4
142 and 1 30 -49 1:4:CAS:0
143 ite 1 29 48 142 1:3:ADDI:1
144 next 1 30 143 stmt_1_4

145 init 1 31 4
146 and 1 31 -50 1:5:JMP:2
147 ite 1 30 49 146 1:4:CAS:0
148 next 1 31 147 stmt_1_5

; blocking variables - block_<id>_<thread>
149 init 1 32 4
150 or 1 40 32
151 ite 1 51 4 150
152 next 1 32 151 block_0_0

153 init 1 33 4
154 or 1 46 33
155 ite 1 51 4 154
156 next 1 33 155 block_0_1

; heap variable
157 write 3 34 14 16
158 ite 3 37 157 34 flush_0
159 write 3 34 6 10
160 ite 3 60 159 34
161 ite 3 43 160 158 0:4:CAS:0
162 write 3 34 15 17
163 ite 3 38 162 161 flush_1
164 write 3 34 6 11
165 ite 3 71 164 34
166 ite 3 49 165 163 1:4:CAS:0
167 next 3 34 166 heap

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

168 or 1 35 36
169 or 1 37 168
170 or 1 38 169
171 constraint 170
172 nand 1 35 36
173 nand 1 35 37
174 nand 1 35 38
175 nand 1 36 37
176 nand 1 36 38
177 nand 1 37 38
178 and 1 172 173
179 and 1 174 178
180 and 1 175 179
181 and 1 176 180
182 and 1 177 181
183 constraint 182

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

184 or 1 20 21
185 or 1 24 184
186 implies 1 185 -35
187 ite 1 18 186 -37
188 constraint 187

189 or 1 26 27
190 or 1 30 189
191 implies 1 190 -36
192 ite 1 19 191 -38
193 constraint 192

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; checkpoint constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

194 and 1 32 -51
195 implies 1 194 -35
196 constraint 195 block_0_0

197 and 1 33 -51
198 implies 1 197 -36
199 constraint 198 block_0_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
200 state 2 k
201 init 2 200 6
202 add 2 7 200
203 next 2 200 202

; bound (16)
204 eq 1 9 200
205 bad 204
