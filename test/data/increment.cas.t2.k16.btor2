;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 3
9 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
10 state 2 accu_0
11 state 2 accu_1

; mem variables - mem_<thread>
12 state 2 mem_0
13 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
14 state 2 sb-adr_0
15 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
16 state 2 sb-val_0
17 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
18 state 1 sb-full_0
19 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
20 state 1 stmt_0_0
21 state 1 stmt_0_1
22 state 1 stmt_0_2
23 state 1 stmt_0_3
24 state 1 stmt_0_4
25 state 1 stmt_0_5
26 state 1 stmt_0_6

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4
32 state 1 stmt_1_5
33 state 1 stmt_1_6

; blocking variables - block_<id>_<thread>
34 state 1 block_0_0
35 state 1 block_0_1

; heap variable
36 state 3 heap

; exit code variable
37 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
38 input 1 thread_0
39 input 1 thread_1

; store buffer flush variables - flush_<thread>
40 input 1 flush_0
41 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
42 and 1 20 38 exec_0_0
43 and 1 21 38 exec_0_1
44 and 1 22 38 exec_0_2
45 and 1 23 38 exec_0_3
46 and 1 24 38 exec_0_4
47 and 1 25 38 exec_0_5
48 and 1 26 38 exec_0_6

49 and 1 27 39 exec_1_0
50 and 1 28 39 exec_1_1
51 and 1 29 39 exec_1_2
52 and 1 30 39 exec_1_3
53 and 1 31 39 exec_1_4
54 and 1 32 39 exec_1_5
55 and 1 33 39 exec_1_6

; checkpoint variables - check_<id>
56 and 1 34 35 check_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
57 init 2 10 6
58 read 2 36 6
59 eq 1 14 6
60 and 1 18 59
61 ite 2 60 16 58
62 ite 2 45 61 10 0:3:MEM:0
63 add 2 10 7
64 ite 2 46 63 62 0:4:ADDI:1
65 eq 1 12 61
66 ite 2 65 7 6
67 ite 2 47 66 64 0:5:CAS:0
68 next 2 10 67 accu_0

69 init 2 11 6
70 eq 1 15 6
71 and 1 19 70
72 ite 2 71 17 58
73 ite 2 52 72 11 1:3:MEM:0
74 add 2 11 7
75 ite 2 53 74 73 1:4:ADDI:1
76 eq 1 13 72
77 ite 2 76 7 6
78 ite 2 54 77 75 1:5:CAS:0
79 next 2 11 78 accu_1

; mem variables - mem_<thread>
80 init 2 12 6
81 ite 2 45 61 12 0:3:MEM:0
82 next 2 12 81 mem_0

83 init 2 13 6
84 ite 2 52 72 13 1:3:MEM:0
85 next 2 13 84 mem_1

; store buffer address variables - sb-adr_<thread>
86 init 2 14 6
87 ite 2 42 6 14 0:0:STORE:0
88 next 2 14 87 sb-adr_0

89 init 2 15 6
90 ite 2 49 6 15 1:0:STORE:0
91 next 2 15 90 sb-adr_1

; store buffer value variables - sb-val_<thread>
92 init 2 16 6
93 ite 2 42 10 16 0:0:STORE:0
94 next 2 16 93 sb-val_0

95 init 2 17 6
96 ite 2 49 11 17 1:0:STORE:0
97 next 2 17 96 sb-val_1

; store buffer full variables - sb-full_<thread>
98 init 1 18 4
99 or 1 42 18
100 ite 1 40 4 99
101 next 1 18 100 sb-full_0

102 init 1 19 4
103 or 1 49 19
104 ite 1 41 4 103
105 next 1 19 104 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
106 init 1 20 5
107 and 1 20 -42 0:0:STORE:0
108 next 1 20 107 stmt_0_0

109 init 1 21 4
110 and 1 21 -43 0:1:FENCE
111 ite 1 20 42 110 0:0:STORE:0
112 next 1 21 111 stmt_0_1

113 init 1 22 4
114 and 1 22 -44 0:2:CHECK:0
115 ite 1 21 43 114 0:1:FENCE
116 next 1 22 115 stmt_0_2

117 init 1 23 4
118 and 1 23 -45 0:3:MEM:0
119 ite 1 22 44 118 0:2:CHECK:0
120 ite 1 26 48 119 0:6:JMP:3
121 next 1 23 120 stmt_0_3

122 init 1 24 4
123 and 1 24 -46 0:4:ADDI:1
124 ite 1 23 45 123 0:3:MEM:0
125 next 1 24 124 stmt_0_4

126 init 1 25 4
127 and 1 25 -47 0:5:CAS:0
128 ite 1 24 46 127 0:4:ADDI:1
129 next 1 25 128 stmt_0_5

130 init 1 26 4
131 and 1 26 -48 0:6:JMP:3
132 ite 1 25 47 131 0:5:CAS:0
133 next 1 26 132 stmt_0_6

134 init 1 27 5
135 and 1 27 -49 1:0:STORE:0
136 next 1 27 135 stmt_1_0

137 init 1 28 4
138 and 1 28 -50 1:1:FENCE
139 ite 1 27 49 138 1:0:STORE:0
140 next 1 28 139 stmt_1_1

141 init 1 29 4
142 and 1 29 -51 1:2:CHECK:0
143 ite 1 28 50 142 1:1:FENCE
144 next 1 29 143 stmt_1_2

145 init 1 30 4
146 and 1 30 -52 1:3:MEM:0
147 ite 1 29 51 146 1:2:CHECK:0
148 ite 1 33 55 147 1:6:JMP:3
149 next 1 30 148 stmt_1_3

150 init 1 31 4
151 and 1 31 -53 1:4:ADDI:1
152 ite 1 30 52 151 1:3:MEM:0
153 next 1 31 152 stmt_1_4

154 init 1 32 4
155 and 1 32 -54 1:5:CAS:0
156 ite 1 31 53 155 1:4:ADDI:1
157 next 1 32 156 stmt_1_5

158 init 1 33 4
159 and 1 33 -55 1:6:JMP:3
160 ite 1 32 54 159 1:5:CAS:0
161 next 1 33 160 stmt_1_6

; blocking variables - block_<id>_<thread>
162 init 1 34 4
163 or 1 44 34
164 ite 1 56 4 163
165 next 1 34 164 block_0_0

166 init 1 35 4
167 or 1 51 35
168 ite 1 56 4 167
169 next 1 35 168 block_0_1

; heap variable
170 write 3 36 14 16
171 ite 3 40 170 36 flush_0
172 write 3 36 6 10
173 ite 3 65 172 36
174 ite 3 47 173 171 0:5:CAS:0
175 write 3 36 15 17
176 ite 3 41 175 174 flush_1
177 write 3 36 6 11
178 ite 3 76 177 36
179 ite 3 54 178 176 1:5:CAS:0
180 next 3 36 179 heap

; exit code variable
181 init 2 37 6
182 next 2 37 37 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

183 or 1 38 39
184 or 1 40 183
185 or 1 41 184
186 constraint 185
187 nand 1 38 39
188 nand 1 38 40
189 nand 1 38 41
190 nand 1 39 40
191 nand 1 39 41
192 nand 1 40 41
193 and 1 187 188
194 and 1 189 193
195 and 1 190 194
196 and 1 191 195
197 and 1 192 196
198 constraint 197

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

199 or 1 20 21
200 or 1 25 199
201 implies 1 200 -38
202 ite 1 18 201 -40
203 constraint 202 flush_0

204 or 1 27 28
205 or 1 32 204
206 implies 1 205 -39
207 ite 1 19 206 -41
208 constraint 207 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; checkpoint constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

209 and 1 34 -56
210 implies 1 209 -38
211 constraint 210 block_0_0

212 and 1 35 -56
213 implies 1 212 -39
214 constraint 213 block_0_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
215 state 2 k
216 init 2 215 6
217 add 2 7 215
218 next 2 215 217

; bound (16)
219 eq 1 9 215
220 bad 219
