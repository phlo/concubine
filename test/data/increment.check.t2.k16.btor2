;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
9 state 2 accu_0
10 state 2 accu_1

; mem variables - mem_<thread>
11 state 2 mem_0
12 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
13 state 2 sb-adr_0
14 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
15 state 2 sb-val_0
16 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
17 state 1 sb-full_0
18 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
19 state 1 stmt_0_0
20 state 1 stmt_0_1
21 state 1 stmt_0_2
22 state 1 stmt_0_3
23 state 1 stmt_0_4
24 state 1 stmt_0_5
25 state 1 stmt_0_6
26 state 1 stmt_0_7
27 state 1 stmt_0_8

28 state 1 stmt_1_0
29 state 1 stmt_1_1
30 state 1 stmt_1_2
31 state 1 stmt_1_3
32 state 1 stmt_1_4
33 state 1 stmt_1_5
34 state 1 stmt_1_6

; blocking variables - block_<id>_<thread>
35 state 1 block_0_0
36 state 1 block_0_1

37 state 1 block_1_0
38 state 1 block_1_1

; heap variable
39 state 3 heap

; exit flag variable
40 state 1 exit

; exit code variable
41 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
42 input 1 thread_0
43 input 1 thread_1

; store buffer flush variables - flush_<thread>
44 input 1 flush_0
45 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
46 and 1 19 42 exec_0_0
47 and 1 20 42 exec_0_1
48 and 1 21 42 exec_0_2
49 and 1 22 42 exec_0_3
50 and 1 23 42 exec_0_4
51 and 1 24 42 exec_0_5
52 and 1 25 42 exec_0_6
53 and 1 26 42 exec_0_7
54 and 1 27 42 exec_0_8

55 and 1 28 43 exec_1_0
56 and 1 29 43 exec_1_1
57 and 1 30 43 exec_1_2
58 and 1 31 43 exec_1_3
59 and 1 32 43 exec_1_4
60 and 1 33 43 exec_1_5
61 and 1 34 43 exec_1_6

; checkpoint variables - check_<id>
62 and 1 35 36 check_0
63 and 1 37 38 check_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

64 or 1 42 43
65 or 1 44 64
66 or 1 45 65
67 or 1 40 66
68 constraint 67
69 nand 1 42 43
70 nand 1 42 44
71 nand 1 42 45
72 nand 1 42 40
73 nand 1 43 44
74 nand 1 43 45
75 nand 1 43 40
76 nand 1 44 45
77 nand 1 44 40
78 nand 1 45 40
79 and 1 69 70
80 and 1 71 79
81 and 1 72 80
82 and 1 73 81
83 and 1 74 82
84 and 1 75 83
85 and 1 76 84
86 and 1 77 85
87 and 1 78 86
88 constraint 87

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

89 or 1 19 20
90 or 1 24 89
91 implies 1 90 -42
92 ite 1 17 91 -44
93 constraint 92 flush_0

94 implies 1 32 -43
95 ite 1 18 94 -45
96 constraint 95 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; checkpoint constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

97 and 1 35 -62
98 implies 1 97 -42
99 constraint 98 block_0_0

100 and 1 36 -62
101 implies 1 100 -43
102 constraint 101 block_0_1

103 and 1 37 -63
104 implies 1 103 -42
105 constraint 104 block_1_0

106 and 1 38 -63
107 implies 1 106 -43
108 constraint 107 block_1_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
109 init 2 9 6
110 read 2 39 6
111 eq 1 13 6
112 and 1 17 111
113 ite 2 112 15 110
114 ite 2 49 113 9 0:3:LOAD:0
115 add 2 9 7
116 ite 2 50 115 114 0:4:ADDI:1
117 next 2 9 116 accu_0

118 init 2 10 6
119 eq 1 14 6
120 and 1 18 119
121 ite 2 120 16 110
122 ite 2 57 121 10 1:2:LOAD:0
123 add 2 10 7
124 ite 2 58 123 122 1:3:ADDI:1
125 next 2 10 124 accu_1

; mem variables - mem_<thread>
126 init 2 11 6
127 next 2 11 11 mem_0

128 init 2 12 6
129 next 2 12 12 mem_1

; store buffer address variables - sb-adr_<thread>
130 init 2 13 6
131 ite 2 46 6 13 0:0:STORE:0
132 ite 2 51 6 131 0:5:STORE:0
133 next 2 13 132 sb-adr_0

134 init 2 14 6
135 ite 2 59 6 14 1:4:STORE:0
136 next 2 14 135 sb-adr_1

; store buffer value variables - sb-val_<thread>
137 init 2 15 6
138 ite 2 46 9 15 0:0:STORE:0
139 ite 2 51 9 138 0:5:STORE:0
140 next 2 15 139 sb-val_0

141 init 2 16 6
142 ite 2 59 10 16 1:4:STORE:0
143 next 2 16 142 sb-val_1

; store buffer full variables - sb-full_<thread>
144 init 1 17 4
145 or 1 46 51
146 or 1 17 145
147 ite 1 44 4 146
148 next 1 17 147 sb-full_0

149 init 1 18 4
150 or 1 59 18
151 ite 1 45 4 150
152 next 1 18 151 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
153 init 1 19 5
154 and 1 19 -46 0:0:STORE:0
155 next 1 19 154 stmt_0_0

156 init 1 20 4
157 and 1 20 -47 0:1:FENCE
158 ite 1 19 46 157 0:0:STORE:0
159 neq 1 9 6
160 and 1 53 159
161 ite 1 26 160 158 0:7:JNZ:1
162 next 1 20 161 stmt_0_1

163 init 1 21 4
164 and 1 21 -48 0:2:CHECK:0
165 ite 1 20 47 164 0:1:FENCE
166 next 1 21 165 stmt_0_2

167 init 1 22 4
168 and 1 22 -49 0:3:LOAD:0
169 ite 1 21 48 168 0:2:CHECK:0
170 next 1 22 169 stmt_0_3

171 init 1 23 4
172 and 1 23 -50 0:4:ADDI:1
173 ite 1 22 49 172 0:3:LOAD:0
174 next 1 23 173 stmt_0_4

175 init 1 24 4
176 and 1 24 -51 0:5:STORE:0
177 ite 1 23 50 176 0:4:ADDI:1
178 next 1 24 177 stmt_0_5

179 init 1 25 4
180 and 1 25 -52 0:6:CHECK:1
181 ite 1 24 51 180 0:5:STORE:0
182 next 1 25 181 stmt_0_6

183 init 1 26 4
184 and 1 26 -53 0:7:JNZ:1
185 ite 1 25 52 184 0:6:CHECK:1
186 next 1 26 185 stmt_0_7

187 init 1 27 4
188 and 1 27 -54 0:8:EXIT:1
189 and 1 53 -159
190 ite 1 26 189 188 0:7:JNZ:1
191 next 1 27 190 stmt_0_8

192 init 1 28 5
193 and 1 28 -55 1:0:CHECK:0
194 neq 1 10 6
195 and 1 60 194
196 ite 1 33 195 193 1:5:JNZ:0
197 next 1 28 196 stmt_1_0

198 init 1 29 4
199 and 1 29 -56 1:1:CHECK:1
200 ite 1 28 55 199 1:0:CHECK:0
201 next 1 29 200 stmt_1_1

202 init 1 30 4
203 and 1 30 -57 1:2:LOAD:0
204 ite 1 29 56 203 1:1:CHECK:1
205 next 1 30 204 stmt_1_2

206 init 1 31 4
207 and 1 31 -58 1:3:ADDI:1
208 ite 1 30 57 207 1:2:LOAD:0
209 next 1 31 208 stmt_1_3

210 init 1 32 4
211 and 1 32 -59 1:4:STORE:0
212 ite 1 31 58 211 1:3:ADDI:1
213 next 1 32 212 stmt_1_4

214 init 1 33 4
215 and 1 33 -60 1:5:JNZ:0
216 ite 1 32 59 215 1:4:STORE:0
217 next 1 33 216 stmt_1_5

218 init 1 34 4
219 and 1 34 -61 1:6:EXIT:1
220 and 1 60 -194
221 ite 1 33 220 219 1:5:JNZ:0
222 next 1 34 221 stmt_1_6

; blocking variables - block_<id>_<thread>
223 init 1 35 4
224 or 1 48 35
225 ite 1 62 4 224
226 next 1 35 225 block_0_0

227 init 1 36 4
228 or 1 55 36
229 ite 1 62 4 228
230 next 1 36 229 block_0_1

231 init 1 37 4
232 or 1 52 37
233 ite 1 63 4 232
234 next 1 37 233 block_1_0

235 init 1 38 4
236 or 1 56 38
237 ite 1 63 4 236
238 next 1 38 237 block_1_1

; heap variable
239 write 3 39 13 15
240 ite 3 44 239 39 flush_0
241 write 3 39 14 16
242 ite 3 45 241 240 flush_1
243 next 3 39 242 heap

; exit flag variable
244 init 1 40 4
245 or 1 40 54
246 or 1 61 245
247 next 1 40 246 exit

; exit code variable
248 init 2 41 6
249 ite 2 54 7 41 0:8:EXIT:1
250 ite 2 61 7 249 1:6:EXIT:1
251 next 2 41 250 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
252 state 2 k
253 init 2 252 6
254 add 2 7 252
255 next 2 252 254

; bound (16)
256 eq 1 8 252
257 bad 256
