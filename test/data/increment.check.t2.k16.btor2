;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
9 state 2 accu_0
10 state 2 accu_1

; mem variables - mem_<thread>
11 state 2 mem_0
12 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
13 state 2 sb-adr_0
14 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
15 state 2 sb-val_0
16 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
17 state 1 sb-full_0
18 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
19 state 1 stmt_0_0
20 state 1 stmt_0_1
21 state 1 stmt_0_2
22 state 1 stmt_0_3
23 state 1 stmt_0_4
24 state 1 stmt_0_5
25 state 1 stmt_0_6
26 state 1 stmt_0_7

27 state 1 stmt_1_0
28 state 1 stmt_1_1
29 state 1 stmt_1_2
30 state 1 stmt_1_3
31 state 1 stmt_1_4
32 state 1 stmt_1_5
33 state 1 stmt_1_6

; blocking variables - block_<id>_<thread>
34 state 1 block_0_0
35 state 1 block_0_1

36 state 1 block_1_0
37 state 1 block_1_1

; heap variable
38 state 3 heap

; exit flag variable
39 state 1 exit

; exit code variable
40 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
41 input 1 thread_0
42 input 1 thread_1

; store buffer flush variables - flush_<thread>
43 input 1 flush_0
44 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
45 and 1 19 41 exec_0_0
46 and 1 20 41 exec_0_1
47 and 1 21 41 exec_0_2
48 and 1 22 41 exec_0_3
49 and 1 23 41 exec_0_4
50 and 1 24 41 exec_0_5
51 and 1 25 41 exec_0_6
52 and 1 26 41 exec_0_7

53 and 1 27 42 exec_1_0
54 and 1 28 42 exec_1_1
55 and 1 29 42 exec_1_2
56 and 1 30 42 exec_1_3
57 and 1 31 42 exec_1_4
58 and 1 32 42 exec_1_5
59 and 1 33 42 exec_1_6

; checkpoint variables - check_<id>
60 and 1 34 35 check_0
61 and 1 36 37 check_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
62 init 2 9 6
63 read 2 38 6
64 eq 1 13 6
65 and 1 17 64
66 ite 2 65 15 63
67 ite 2 47 66 9 0:2:LOAD:0
68 add 2 9 7
69 ite 2 48 68 67 0:3:ADDI:1
70 next 2 9 69 accu_0

71 init 2 10 6
72 eq 1 14 6
73 and 1 18 72
74 ite 2 73 16 63
75 ite 2 55 74 10 1:2:LOAD:0
76 add 2 10 7
77 ite 2 56 76 75 1:3:ADDI:1
78 next 2 10 77 accu_1

; mem variables - mem_<thread>
79 init 2 11 6
80 next 2 11 11 mem_0

81 init 2 12 6
82 next 2 12 12 mem_1

; store buffer address variables - sb-adr_<thread>
83 init 2 13 6
84 ite 2 45 6 13 0:0:STORE:0
85 ite 2 49 6 84 0:4:STORE:0
86 next 2 13 85 sb-adr_0

87 init 2 14 6
88 ite 2 57 6 14 1:4:STORE:0
89 next 2 14 88 sb-adr_1

; store buffer value variables - sb-val_<thread>
90 init 2 15 6
91 ite 2 45 9 15 0:0:STORE:0
92 ite 2 49 9 91 0:4:STORE:0
93 next 2 15 92 sb-val_0

94 init 2 16 6
95 ite 2 57 10 16 1:4:STORE:0
96 next 2 16 95 sb-val_1

; store buffer full variables - sb-full_<thread>
97 init 1 17 4
98 or 1 45 49
99 or 1 17 98
100 ite 1 43 4 99
101 next 1 17 100 sb-full_0

102 init 1 18 4
103 or 1 57 18
104 ite 1 44 4 103
105 next 1 18 104 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
106 init 1 19 5
107 and 1 19 -45 0:0:STORE:0
108 ne 1 9 6
109 and 1 51 108
110 ite 1 25 109 107 0:6:JNZ:0
111 next 1 19 110 stmt_0_0

112 init 1 20 4
113 and 1 20 -46 0:1:CHECK:0
114 ite 1 19 45 113 0:0:STORE:0
115 next 1 20 114 stmt_0_1

116 init 1 21 4
117 and 1 21 -47 0:2:LOAD:0
118 ite 1 20 46 117 0:1:CHECK:0
119 next 1 21 118 stmt_0_2

120 init 1 22 4
121 and 1 22 -48 0:3:ADDI:1
122 ite 1 21 47 121 0:2:LOAD:0
123 next 1 22 122 stmt_0_3

124 init 1 23 4
125 and 1 23 -49 0:4:STORE:0
126 ite 1 22 48 125 0:3:ADDI:1
127 next 1 23 126 stmt_0_4

128 init 1 24 4
129 and 1 24 -50 0:5:CHECK:1
130 ite 1 23 49 129 0:4:STORE:0
131 next 1 24 130 stmt_0_5

132 init 1 25 4
133 and 1 25 -51 0:6:JNZ:0
134 ite 1 24 50 133 0:5:CHECK:1
135 next 1 25 134 stmt_0_6

136 init 1 26 4
137 and 1 26 -52 0:7:EXIT:1
138 and 1 51 -108
139 ite 1 25 138 137 0:6:JNZ:0
140 next 1 26 139 stmt_0_7

141 init 1 27 5
142 and 1 27 -53 1:0:CHECK:0
143 ne 1 10 6
144 and 1 58 143
145 ite 1 32 144 142 1:5:JNZ:0
146 next 1 27 145 stmt_1_0

147 init 1 28 4
148 and 1 28 -54 1:1:CHECK:1
149 ite 1 27 53 148 1:0:CHECK:0
150 next 1 28 149 stmt_1_1

151 init 1 29 4
152 and 1 29 -55 1:2:LOAD:0
153 ite 1 28 54 152 1:1:CHECK:1
154 next 1 29 153 stmt_1_2

155 init 1 30 4
156 and 1 30 -56 1:3:ADDI:1
157 ite 1 29 55 156 1:2:LOAD:0
158 next 1 30 157 stmt_1_3

159 init 1 31 4
160 and 1 31 -57 1:4:STORE:0
161 ite 1 30 56 160 1:3:ADDI:1
162 next 1 31 161 stmt_1_4

163 init 1 32 4
164 and 1 32 -58 1:5:JNZ:0
165 ite 1 31 57 164 1:4:STORE:0
166 next 1 32 165 stmt_1_5

167 init 1 33 4
168 and 1 33 -59 1:6:EXIT:1
169 and 1 58 -143
170 ite 1 32 169 168 1:5:JNZ:0
171 next 1 33 170 stmt_1_6

; blocking variables - block_<id>_<thread>
172 init 1 34 4
173 or 1 46 34
174 ite 1 61 4 173
175 next 1 34 174 block_0_0

176 init 1 35 4
177 or 1 53 35
178 ite 1 61 4 177
179 next 1 35 178 block_0_1

180 init 1 36 4
181 or 1 50 36
182 ite 1 60 4 181
183 next 1 36 182 block_1_0

184 init 1 37 4
185 or 1 54 37
186 ite 1 60 4 185
187 next 1 37 186 block_1_1

; heap variable
188 write 3 38 13 15
189 ite 3 43 188 38 flush_0
190 write 3 38 14 16
191 ite 3 44 190 189 flush_1
192 next 3 38 191 heap

; exit flag variable
193 init 1 39 4
194 or 1 39 52
195 or 1 59 194
196 next 1 39 195 exit

; exit code variable
197 init 2 40 6
198 ite 2 52 7 40 0:7:EXIT:1
199 ite 2 59 7 198 1:6:EXIT:1
200 next 2 40 199 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

201 or 1 41 42
202 or 1 43 201
203 or 1 44 202
204 or 1 39 203
205 constraint 204
206 nand 1 41 42
207 nand 1 41 43
208 nand 1 41 44
209 nand 1 41 39
210 nand 1 42 43
211 nand 1 42 44
212 nand 1 42 39
213 nand 1 43 44
214 nand 1 43 39
215 nand 1 44 39
216 and 1 206 207
217 and 1 208 216
218 and 1 209 217
219 and 1 210 218
220 and 1 211 219
221 and 1 212 220
222 and 1 213 221
223 and 1 214 222
224 and 1 215 223
225 constraint 224

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

226 or 1 19 20
227 or 1 23 226
228 implies 1 227 -41
229 ite 1 17 228 -43
230 constraint 229

231 implies 1 31 -42
232 ite 1 18 231 -44
233 constraint 232

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; checkpoint constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

234 and 1 34 -60
235 implies 1 234 -41
236 constraint 235 block_0_0

237 and 1 35 -60
238 implies 1 237 -42
239 constraint 238 block_0_1

240 and 1 36 -61
241 implies 1 240 -41
242 constraint 241 block_1_0

243 and 1 37 -61
244 implies 1 243 -42
245 constraint 244 block_1_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
246 state 2 k
247 init 2 246 6
248 add 2 7 246
249 next 2 246 248

; bound (16)
250 eq 1 8 246
251 bad 250
