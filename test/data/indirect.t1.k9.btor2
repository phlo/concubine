;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 9

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
9 state 2 accu_0

; mem variables - mem_<thread>
10 state 2 mem_0

; store buffer address variables - sb-adr_<thread>
11 state 2 sb-adr_0

; store buffer value variables - sb-val_<thread>
12 state 2 sb-val_0

; store buffer full variables - sb-full_<thread>
13 state 1 sb-full_0

; statement activation variables - stmt_<thread>_<pc>
14 state 1 stmt_0_0
15 state 1 stmt_0_1
16 state 1 stmt_0_2
17 state 1 stmt_0_3
18 state 1 stmt_0_4
19 state 1 stmt_0_5
20 state 1 stmt_0_6

; halt variables - halt_<thread>
21 state 1 halt_0

; heap variable
22 state 3 heap

; exit flag variable
23 state 1 exit

; exit code variable
24 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
25 input 1 thread_0

; store buffer flush variables - flush_<thread>
26 input 1 flush_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
27 and 1 14 25 exec_0_0
28 and 1 15 25 exec_0_1
29 and 1 16 25 exec_0_2
30 and 1 17 25 exec_0_3
31 and 1 18 25 exec_0_4
32 and 1 19 25 exec_0_5
33 and 1 20 25 exec_0_6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

34 or 1 25 26
35 or 1 23 34
36 constraint 35
37 nand 1 25 26
38 nand 1 25 23
39 nand 1 26 23
40 and 1 37 38
41 and 1 39 40
42 constraint 41

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

43 or 1 14 16
44 or 1 20 43
45 implies 1 44 -25
46 ite 1 13 45 -26
47 constraint 46 flush_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

48 implies 1 21 -25
49 constraint 48 halt_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
50 init 2 9 6
51 add 2 9 7
52 ite 2 28 51 9 0:1:ADDI:1
53 read 2 22 6
54 eq 1 11 6
55 read 2 22 53
56 eq 1 11 53
57 ite 2 56 12 55
58 read 2 22 12
59 eq 1 12 6
60 ite 2 59 12 58
61 ite 2 54 60 57
62 ite 2 13 61 55
63 ite 2 30 62 52 0:3:LOAD:0
64 read 2 22 7
65 eq 1 11 7
66 read 2 22 64
67 eq 1 11 64
68 ite 2 67 12 66
69 eq 1 12 7
70 ite 2 69 12 58
71 ite 2 65 70 68
72 ite 2 13 71 66
73 add 2 9 72
74 ite 2 31 73 63 0:4:ADD:1
75 sub 2 9 72
76 ite 2 32 75 74 0:5:CMP:1
77 next 2 9 76 accu_0

; mem variables - mem_<thread>
78 init 2 10 6
79 next 2 10 10 mem_0

; store buffer address variables - sb-adr_<thread>
80 init 2 11 6
81 ite 2 27 7 11 0:0:STORE:1
82 and 1 13 65
83 ite 2 82 12 64
84 ite 2 29 83 81 0:2:STORE:1
85 next 2 11 84 sb-adr_0

; store buffer value variables - sb-val_<thread>
86 init 2 12 6
87 ite 2 27 9 12 0:0:STORE:1
88 ite 2 29 9 87 0:2:STORE:1
89 next 2 12 88 sb-val_0

; store buffer full variables - sb-full_<thread>
90 init 1 13 4
91 or 1 27 29
92 or 1 13 91
93 ite 1 26 4 92
94 next 1 13 93 sb-full_0

; statement activation variables - stmt_<thread>_<pc>
95 init 1 14 5
96 and 1 14 -27 0:0:STORE:1
97 next 1 14 96 stmt_0_0

98 init 1 15 4
99 and 1 15 -28 0:1:ADDI:1
100 ite 1 14 27 99 0:0:STORE:1
101 next 1 15 100 stmt_0_1

102 init 1 16 4
103 and 1 16 -29 0:2:STORE:1
104 ite 1 15 28 103 0:1:ADDI:1
105 next 1 16 104 stmt_0_2

106 init 1 17 4
107 and 1 17 -30 0:3:LOAD:0
108 ite 1 16 29 107 0:2:STORE:1
109 next 1 17 108 stmt_0_3

110 init 1 18 4
111 and 1 18 -31 0:4:ADD:1
112 ite 1 17 30 111 0:3:LOAD:0
113 next 1 18 112 stmt_0_4

114 init 1 19 4
115 and 1 19 -32 0:5:CMP:1
116 ite 1 18 31 115 0:4:ADD:1
117 next 1 19 116 stmt_0_5

118 init 1 20 4
119 and 1 20 -33 0:6:HALT
120 ite 1 19 32 119 0:5:CMP:1
121 next 1 20 120 stmt_0_6

; halt variables - halt_<thread>
122 init 1 21 4
123 or 1 33 21
124 next 1 21 123 halt_0

; heap variable
125 write 3 22 11 12
126 ite 3 26 125 22 flush_0
127 next 3 22 126 heap

; exit flag variable
128 init 1 23 4
129 or 1 23 123
130 next 1 23 129 exit

; exit code variable
131 init 2 24 6
132 next 2 24 24 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
133 state 2 k
134 init 2 133 6
135 add 2 7 133
136 next 2 133 135

; bound (9)
137 eq 1 8 133
138 bad 137
