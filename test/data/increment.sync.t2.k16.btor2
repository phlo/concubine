;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; machine state declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; heap
9 state 3 heap

; accumulator registers - accu_<thread>
10 state 2 accu_0
11 state 2 accu_1

; CAS memory registers - mem_<thread>
12 state 2 mem_0
13 state 2 mem_1

; statement activation flags - stmt_<thread>_<pc>
14 state 1 stmt_0_0
15 state 1 stmt_0_1
16 state 1 stmt_0_2
17 state 1 stmt_0_3
18 state 1 stmt_0_4
19 state 1 stmt_0_5
20 state 1 stmt_0_6
21 state 1 stmt_0_7

22 state 1 stmt_1_0
23 state 1 stmt_1_1
24 state 1 stmt_1_2
25 state 1 stmt_1_3
26 state 1 stmt_1_4
27 state 1 stmt_1_5
28 state 1 stmt_1_6

; exit flag
29 state 1 exit

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; thread scheduling
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

30 input 1 thread_0
31 input 1 thread_1

; cardinality constraint
32 or 1 30 31
33 or 1 29 32
34 constraint 33
35 nand 1 30 31
36 nand 1 30 29
37 nand 1 31 29
38 and 1 35 36
39 and 1 37 38
40 constraint 39

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; statement execution - exec_<thread>_<pc>
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

41 and 1 14 30 exec_0_0
42 and 1 15 30 exec_0_1
43 and 1 16 30 exec_0_2
44 and 1 17 30 exec_0_3
45 and 1 18 30 exec_0_4
46 and 1 19 30 exec_0_5
47 and 1 20 30 exec_0_6
48 and 1 21 30 exec_0_7

49 and 1 22 31 exec_1_0
50 and 1 23 31 exec_1_1
51 and 1 24 31 exec_1_2
52 and 1 25 31 exec_1_3
53 and 1 26 31 exec_1_4
54 and 1 27 31 exec_1_5
55 and 1 28 31 exec_1_6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; statement activation state definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; stmt_0_0
56 init 1 14 5
57 and 1 14 -41
58 next 1 14 57 0:0:STORE:0

; stmt_0_1
59 init 1 15 4
60 and 1 15 -42
61 ite 1 14 41 60 0:0:STORE:0
62 ne 1 10 6
63 and 1 47 62
64 ite 1 20 63 61 0:6:JNZ:1
65 next 1 15 64 0:1:SYNC:0

; stmt_0_2
66 init 1 16 4
67 and 1 16 -43
68 ite 1 15 42 67 0:1:SYNC:0
69 next 1 16 68 0:2:LOAD:0

; stmt_0_3
70 init 1 17 4
71 and 1 17 -44
72 ite 1 16 43 71 0:2:LOAD:0
73 next 1 17 72 0:3:ADDI:1

; stmt_0_4
74 init 1 18 4
75 and 1 18 -45
76 ite 1 17 44 75 0:3:ADDI:1
77 next 1 18 76 0:4:STORE:0

; stmt_0_5
78 init 1 19 4
79 and 1 19 -46
80 ite 1 18 45 79 0:4:STORE:0
81 next 1 19 80 0:5:SYNC:1

; stmt_0_6
82 init 1 20 4
83 and 1 20 -47
84 ite 1 19 46 83 0:5:SYNC:1
85 next 1 20 84 0:6:JNZ:1

; stmt_0_7
86 init 1 21 4
87 and 1 21 -48
88 and 1 47 -62
89 ite 1 20 88 87 0:6:JNZ:1
90 next 1 21 89 0:7:EXIT:1

; stmt_1_0
91 init 1 22 5
92 and 1 22 -49
93 ne 1 11 6
94 and 1 54 93
95 ite 1 27 94 92 1:5:JNZ:0
96 next 1 22 95 1:0:SYNC:0

; stmt_1_1
97 init 1 23 4
98 and 1 23 -50
99 ite 1 22 49 98 1:0:SYNC:0
100 next 1 23 99 1:1:SYNC:1

; stmt_1_2
101 init 1 24 4
102 and 1 24 -51
103 ite 1 23 50 102 1:1:SYNC:1
104 next 1 24 103 1:2:LOAD:0

; stmt_1_3
105 init 1 25 4
106 and 1 25 -52
107 ite 1 24 51 106 1:2:LOAD:0
108 next 1 25 107 1:3:ADDI:1

; stmt_1_4
109 init 1 26 4
110 and 1 26 -53
111 ite 1 25 52 110 1:3:ADDI:1
112 next 1 26 111 1:4:STORE:0

; stmt_1_5
113 init 1 27 4
114 and 1 27 -54
115 ite 1 26 53 114 1:4:STORE:0
116 next 1 27 115 1:5:JNZ:0

; stmt_1_6
117 init 1 28 4
118 and 1 28 -55
119 and 1 54 -93
120 ite 1 27 119 118 1:5:JNZ:0
121 next 1 28 120 1:6:EXIT:1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; register state definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accumulator definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu_0
122 init 2 10 6
123 read 2 9 6
124 ite 2 43 123 10 0:2:LOAD:0
125 add 2 10 7
126 ite 2 44 125 124 0:3:ADDI:1
127 next 2 10 126 accu_0

; accu_1
128 init 2 11 6
129 ite 2 51 123 11 1:2:LOAD:0
130 add 2 11 7
131 ite 2 52 130 129 1:3:ADDI:1
132 next 2 11 131 accu_1

; CAS memory register definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; mem_0
133 init 2 12 6
134 next 2 12 12 mem_0

; mem_1
135 init 2 13 6
136 next 2 13 13 mem_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; heap state definition
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

137 write 3 9 6 10
138 ite 3 41 137 9 0:0:STORE:0
139 ite 3 45 137 138 0:4:STORE:0
140 write 3 9 6 11
141 ite 3 53 140 139 1:4:STORE:0
142 next 3 9 141 heap

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; exit state definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; exit flag
143 init 1 29 4
144 or 1 29 55
145 or 1 48 144
146 next 1 29 145 exit

; exit code
147 state 2 exit-code
148 init 2 147 6
149 ite 2 48 7 147 0:7:EXIT:1
150 ite 2 55 7 149 1:6:EXIT:1
151 next 2 147 150 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; synchronization constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread blocking flags - block_<id>_<thread>
152 state 1 block_0_0
153 state 1 block_0_1

154 state 1 block_1_0
155 state 1 block_1_1

; synchronization flags - sync_<id>
156 and 1 152 153 sync_0
157 and 1 154 155 sync_1

; thread blocking flag definitions
158 init 1 152 4
159 or 1 42 152
160 ite 1 156 4 159
161 next 1 152 160 block_0_0

162 init 1 153 4
163 or 1 49 153
164 ite 1 156 4 163
165 next 1 153 164 block_0_1

166 init 1 154 4
167 or 1 46 154
168 ite 1 157 4 167
169 next 1 154 168 block_1_0

170 init 1 155 4
171 or 1 50 155
172 ite 1 157 4 171
173 next 1 155 172 block_1_1

; prevent scheduling of blocked threads
174 and 1 152 -156
175 implies 1 174 -30
176 constraint 175 block_0_0

177 and 1 153 -156
178 implies 1 177 -31
179 constraint 178 block_0_1

180 and 1 154 -157
181 implies 1 180 -30
182 constraint 181 block_1_0

183 and 1 155 -157
184 implies 1 183 -31
185 constraint 184 block_1_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
186 state 2 k
187 init 2 186 6
188 add 2 7 186
189 next 2 186 188

; bound (16)
190 eq 1 8 186
191 bad 190
