;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1
6 zero 2
7 one 2
8 constd 2 12

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; bound
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; step counter
9 state 2 k
10 init 2 9 6
11 add 2 7 9
12 next 2 9 11

; bound (12)
13 eq 1 8 9
14 bad 13

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; states
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; heap
15 state 3 heap

; accumulator
16 state 2 accu_0
17 init 2 16 6
18 state 2 accu_1
19 init 2 18 6

; CAS memory register
20 state 2 mem_0
21 init 2 20 6
22 state 2 mem_1
23 init 2 22 6

; statement activation
24 state 1 stmt_0_0
25 init 1 24 5
26 state 1 stmt_0_1
27 init 1 26 4
28 state 1 stmt_0_2
29 init 1 28 4
30 state 1 stmt_0_3
31 init 1 30 4
32 state 1 stmt_0_4
33 init 1 32 4
34 state 1 stmt_0_5
35 init 1 34 4
36 state 1 stmt_0_6
37 init 1 36 4
38 state 1 stmt_0_7
39 init 1 38 4

40 state 1 stmt_1_0
41 init 1 40 5
42 state 1 stmt_1_1
43 init 1 42 4
44 state 1 stmt_1_2
45 init 1 44 4
46 state 1 stmt_1_3
47 init 1 46 4
48 state 1 stmt_1_4
49 init 1 48 4
50 state 1 stmt_1_5
51 init 1 50 4
52 state 1 stmt_1_6
53 init 1 52 4

; exit flag
54 state 1 exit
55 init 1 54 4

; exit code
56 state 2 exit-code
57 init 2 56 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; thread scheduling
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

58 input 1 thread_0
59 input 1 thread_1

; cardinality constraint
60 or 1 58 59
61 or 1 54 60
62 constraint 61
63 nand 1 58 59
64 nand 1 58 54
65 nand 1 59 54
66 and 1 63 64
67 and 1 65 66
68 constraint 67

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; synchronization constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; negated thread activation variables
69 not 1 58 not_thread_0
70 not 1 59 not_thread_1

; synchronization condition sync_0
71 and 1 26 40 sync_0
72 not 1 71 not_sync_0

; disable threads waiting for barrier 0
73 and 1 26 72
74 implies 1 73 69
75 constraint 74 sync_0_block_0

76 and 1 40 72
77 implies 1 76 70
78 constraint 77 sync_0_block_1

; synchronization condition sync_1
79 and 1 34 42 sync_1
80 not 1 79 not_sync_1

; disable threads waiting for barrier 1
81 and 1 34 80
82 implies 1 81 69
83 constraint 82 sync_1_block_0

84 and 1 42 80
85 implies 1 84 70
86 constraint 85 sync_1_block_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; statement execution - shorthand for statement & thread activation
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

87 and 1 24 58 exec_0_0
88 and 1 26 71 exec_0_1
89 and 1 28 58 exec_0_2
90 and 1 30 58 exec_0_3
91 and 1 32 58 exec_0_4
92 and 1 34 79 exec_0_5
93 and 1 36 58 exec_0_6
94 and 1 38 58 exec_0_7

95 and 1 40 71 exec_1_0
96 and 1 42 79 exec_1_1
97 and 1 44 59 exec_1_2
98 and 1 46 59 exec_1_3
99 and 1 48 59 exec_1_4
100 and 1 50 59 exec_1_5
101 and 1 52 59 exec_1_6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state updates
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; update statement activation ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; stmt_0_0
102 not 1 87
103 and 1 24 102
104 next 1 24 103 0:0:STORE:0

; stmt_0_1
105 not 1 88
106 and 1 26 105
107 ite 1 24 87 106 0:0:STORE:0
108 ne 1 16 6
109 and 1 93 108
110 ite 1 36 109 107 0:6:JNZ:1
111 next 1 26 110 0:1:SYNC:0

; stmt_0_2
112 not 1 89
113 and 1 28 112
114 ite 1 26 88 113 0:1:SYNC:0
115 next 1 28 114 0:2:LOAD:0

; stmt_0_3
116 not 1 90
117 and 1 30 116
118 ite 1 28 89 117 0:2:LOAD:0
119 next 1 30 118 0:3:ADDI:1

; stmt_0_4
120 not 1 91
121 and 1 32 120
122 ite 1 30 90 121 0:3:ADDI:1
123 next 1 32 122 0:4:STORE:0

; stmt_0_5
124 not 1 92
125 and 1 34 124
126 ite 1 32 91 125 0:4:STORE:0
127 next 1 34 126 0:5:SYNC:1

; stmt_0_6
128 not 1 93
129 and 1 36 128
130 ite 1 34 92 129 0:5:SYNC:1
131 next 1 36 130 0:6:JNZ:1

; stmt_0_7
132 not 1 94
133 and 1 38 132
134 not 1 108
135 and 1 93 134
136 ite 1 36 135 133 0:6:JNZ:1
137 next 1 38 136 0:7:EXIT:1

; stmt_1_0
138 not 1 95
139 and 1 40 138
140 ne 1 18 6
141 and 1 100 140
142 ite 1 50 141 139 1:5:JNZ:0
143 next 1 40 142 1:0:SYNC:0

; stmt_1_1
144 not 1 96
145 and 1 42 144
146 ite 1 40 95 145 1:0:SYNC:0
147 next 1 42 146 1:1:SYNC:1

; stmt_1_2
148 not 1 97
149 and 1 44 148
150 ite 1 42 96 149 1:1:SYNC:1
151 next 1 44 150 1:2:LOAD:0

; stmt_1_3
152 not 1 98
153 and 1 46 152
154 ite 1 44 97 153 1:2:LOAD:0
155 next 1 46 154 1:3:ADDI:1

; stmt_1_4
156 not 1 99
157 and 1 48 156
158 ite 1 46 98 157 1:3:ADDI:1
159 next 1 48 158 1:4:STORE:0

; stmt_1_5
160 not 1 100
161 and 1 50 160
162 ite 1 48 99 161 1:4:STORE:0
163 next 1 50 162 1:5:JNZ:0

; stmt_1_6
164 not 1 101
165 and 1 52 164
166 not 1 140
167 and 1 100 166
168 ite 1 50 167 165 1:5:JNZ:0
169 next 1 52 168 1:6:EXIT:1

; update accu ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu_0
170 read 2 15 6
171 ite 2 89 170 16 0:2:LOAD:0
172 add 2 16 7
173 ite 2 90 172 171 0:3:ADDI:1
174 next 2 16 173

; accu_1
175 ite 2 97 170 18 1:2:LOAD:0
176 add 2 18 7
177 ite 2 98 176 175 1:3:ADDI:1
178 next 2 18 177

; update CAS memory register ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; mem_0
179 next 2 20 20

; mem_1
180 next 2 22 22

; update heap ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

181 write 3 15 6 16
182 ite 3 87 181 15 0:0:STORE:0
183 ite 3 91 181 182 0:4:STORE:0
184 write 3 15 6 18
185 ite 3 99 184 183 1:4:STORE:0
186 next 3 15 185

; update exit flag ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

187 or 1 54 101
188 or 1 94 187
189 next 1 54 188

; update exit code ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

190 ite 2 94 7 56 0:7:EXIT:1
191 ite 2 101 7 190 1:6:EXIT:1
192 next 2 56 191

