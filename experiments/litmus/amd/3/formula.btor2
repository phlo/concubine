;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 16

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
9 state 2 accu_0
10 state 2 accu_1

; mem variables - mem_<thread>
11 state 2 mem_0
12 state 2 mem_1

; store buffer address variables - sb-adr_<thread>
13 state 2 sb-adr_0
14 state 2 sb-adr_1

; store buffer value variables - sb-val_<thread>
15 state 2 sb-val_0
16 state 2 sb-val_1

; store buffer full variables - sb-full_<thread>
17 state 1 sb-full_0
18 state 1 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
19 state 1 stmt_0_0
20 state 1 stmt_0_1
21 state 1 stmt_0_2
22 state 1 stmt_0_3
23 state 1 stmt_0_4
24 state 1 stmt_0_5

25 state 1 stmt_1_0
26 state 1 stmt_1_1
27 state 1 stmt_1_2
28 state 1 stmt_1_3
29 state 1 stmt_1_4
30 state 1 stmt_1_5

; halt variables - halt_<thread>
31 state 1 halt_0
32 state 1 halt_1

; heap variable
33 state 3 heap

; exit flag variable
34 state 1 exit

; exit code variable
35 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
36 input 1 thread_0
37 input 1 thread_1

; store buffer flush variables - flush_<thread>
38 input 1 flush_0
39 input 1 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
40 and 1 19 36 exec_0_0
41 and 1 20 36 exec_0_1
42 and 1 21 36 exec_0_2
43 and 1 22 36 exec_0_3
44 and 1 23 36 exec_0_4
45 and 1 24 36 exec_0_5

46 and 1 25 37 exec_1_0
47 and 1 26 37 exec_1_1
48 and 1 27 37 exec_1_2
49 and 1 28 37 exec_1_3
50 and 1 29 37 exec_1_4
51 and 1 30 37 exec_1_5

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

52 or 1 36 37
53 or 1 38 52
54 or 1 39 53
55 or 1 34 54
56 constraint 55
57 nand 1 36 37
58 nand 1 36 38
59 nand 1 36 39
60 nand 1 36 34
61 nand 1 37 38
62 nand 1 37 39
63 nand 1 37 34
64 nand 1 38 39
65 nand 1 38 34
66 nand 1 39 34
67 and 1 57 58
68 and 1 59 67
69 and 1 60 68
70 and 1 61 69
71 and 1 62 70
72 and 1 63 71
73 and 1 64 72
74 and 1 65 73
75 and 1 66 74
76 constraint 75

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

77 or 1 20 22
78 or 1 24 77
79 implies 1 78 -36
80 ite 1 17 79 -38
81 constraint 80 flush_0

82 or 1 26 28
83 or 1 30 82
84 implies 1 83 -37
85 ite 1 18 84 -39
86 constraint 85 flush_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

87 implies 1 31 -36
88 constraint 87 halt_0

89 implies 1 32 -37
90 constraint 89 halt_1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
91 init 2 9 6
92 add 2 9 7
93 ite 2 40 92 9 0:0:ADDI:1
94 add 2 9 7
95 ite 2 42 94 93 0:2:ADDI:1
96 read 2 33 7
97 eq 1 13 7
98 and 1 17 97
99 ite 2 98 15 96
100 ite 2 44 99 95 0:4:LOAD:1
101 next 2 9 100 accu_0

102 init 2 10 6
103 add 2 10 7
104 ite 2 46 103 10 1:0:ADDI:1
105 add 2 10 7
106 ite 2 48 105 104 1:2:ADDI:1
107 read 2 33 6
108 eq 1 14 6
109 and 1 18 108
110 ite 2 109 16 107
111 ite 2 50 110 106 1:4:LOAD:0
112 next 2 10 111 accu_1

; mem variables - mem_<thread>
113 init 2 11 6
114 next 2 11 11 mem_0

115 init 2 12 6
116 next 2 12 12 mem_1

; store buffer address variables - sb-adr_<thread>
117 init 2 13 6
118 ite 2 41 6 13 0:1:STORE:0
119 ite 2 43 6 118 0:3:STORE:0
120 next 2 13 119 sb-adr_0

121 init 2 14 6
122 ite 2 47 7 14 1:1:STORE:1
123 ite 2 49 7 122 1:3:STORE:1
124 next 2 14 123 sb-adr_1

; store buffer value variables - sb-val_<thread>
125 init 2 15 6
126 ite 2 41 9 15 0:1:STORE:0
127 ite 2 43 9 126 0:3:STORE:0
128 next 2 15 127 sb-val_0

129 init 2 16 6
130 ite 2 47 10 16 1:1:STORE:1
131 ite 2 49 10 130 1:3:STORE:1
132 next 2 16 131 sb-val_1

; store buffer full variables - sb-full_<thread>
133 init 1 17 4
134 or 1 41 43
135 or 1 17 134
136 ite 1 38 4 135
137 next 1 17 136 sb-full_0

138 init 1 18 4
139 or 1 47 49
140 or 1 18 139
141 ite 1 39 4 140
142 next 1 18 141 sb-full_1

; statement activation variables - stmt_<thread>_<pc>
143 init 1 19 5
144 and 1 19 -40 0:0:ADDI:1
145 next 1 19 144 stmt_0_0

146 init 1 20 4
147 and 1 20 -41 0:1:STORE:0
148 ite 1 19 40 147 0:0:ADDI:1
149 next 1 20 148 stmt_0_1

150 init 1 21 4
151 and 1 21 -42 0:2:ADDI:1
152 ite 1 20 41 151 0:1:STORE:0
153 next 1 21 152 stmt_0_2

154 init 1 22 4
155 and 1 22 -43 0:3:STORE:0
156 ite 1 21 42 155 0:2:ADDI:1
157 next 1 22 156 stmt_0_3

158 init 1 23 4
159 and 1 23 -44 0:4:LOAD:1
160 ite 1 22 43 159 0:3:STORE:0
161 next 1 23 160 stmt_0_4

162 init 1 24 4
163 and 1 24 -45 0:5:HALT
164 ite 1 23 44 163 0:4:LOAD:1
165 next 1 24 164 stmt_0_5

166 init 1 25 5
167 and 1 25 -46 1:0:ADDI:1
168 next 1 25 167 stmt_1_0

169 init 1 26 4
170 and 1 26 -47 1:1:STORE:1
171 ite 1 25 46 170 1:0:ADDI:1
172 next 1 26 171 stmt_1_1

173 init 1 27 4
174 and 1 27 -48 1:2:ADDI:1
175 ite 1 26 47 174 1:1:STORE:1
176 next 1 27 175 stmt_1_2

177 init 1 28 4
178 and 1 28 -49 1:3:STORE:1
179 ite 1 27 48 178 1:2:ADDI:1
180 next 1 28 179 stmt_1_3

181 init 1 29 4
182 and 1 29 -50 1:4:LOAD:0
183 ite 1 28 49 182 1:3:STORE:1
184 next 1 29 183 stmt_1_4

185 init 1 30 4
186 and 1 30 -51 1:5:HALT
187 ite 1 29 50 186 1:4:LOAD:0
188 next 1 30 187 stmt_1_5

; halt variables - halt_<thread>
189 init 1 31 4
190 or 1 45 31
191 next 1 31 190 halt_0

192 init 1 32 4
193 or 1 51 32
194 next 1 32 193 halt_1

; heap variable
195 write 3 33 13 15
196 ite 3 38 195 33 flush_0
197 write 3 33 14 16
198 ite 3 39 197 196 flush_1
199 next 3 33 198 heap

; exit flag variable
200 init 1 34 4
201 and 1 190 193
202 or 1 34 201
203 next 1 34 202 exit

; exit code variable
204 init 2 35 6
205 next 2 35 35 exit-code

