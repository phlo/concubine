;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; sorts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

1 sort bitvec 1
2 sort bitvec 16
3 sort array 2 2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

4 zero 1
5 one 1

6 zero 2
7 one 2
8 constd 2 5
9 constd 2 17

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; memory map
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

10 state 3 mmap
11 write 3 10 6 6
12 write 3 11 7 6

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
13 state 2 accu_0
14 state 2 accu_1
15 state 2 accu_2

; mem variables - mem_<thread>
16 state 2 mem_0
17 state 2 mem_1
18 state 2 mem_2

; store buffer address variables - sb-adr_<thread>
19 state 2 sb-adr_0
20 state 2 sb-adr_1
21 state 2 sb-adr_2

; store buffer value variables - sb-val_<thread>
22 state 2 sb-val_0
23 state 2 sb-val_1
24 state 2 sb-val_2

; store buffer full variables - sb-full_<thread>
25 state 1 sb-full_0
26 state 1 sb-full_1
27 state 1 sb-full_2

; statement activation variables - stmt_<thread>_<pc>
28 state 1 stmt_0_0
29 state 1 stmt_0_1
30 state 1 stmt_0_2
31 state 1 stmt_0_3
32 state 1 stmt_0_4

33 state 1 stmt_1_0
34 state 1 stmt_1_1
35 state 1 stmt_1_2
36 state 1 stmt_1_3
37 state 1 stmt_1_4

38 state 1 stmt_2_0
39 state 1 stmt_2_1
40 state 1 stmt_2_2
41 state 1 stmt_2_3
42 state 1 stmt_2_4
43 state 1 stmt_2_5

; blocking variables - block_<id>_<thread>
44 state 1 block_0_0
45 state 1 block_0_1
46 state 1 block_0_2

; halt variables - halt_<thread>
47 state 1 halt_0
48 state 1 halt_1
49 state 1 halt_2

; heap variable
50 state 3 heap

; exit flag variable
51 state 1 exit

; exit code variable
52 state 2 exit-code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; input variable declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; thread activation variables - thread_<thread>
53 input 1 thread_0
54 input 1 thread_1
55 input 1 thread_2

; store buffer flush variables - flush_<thread>
56 input 1 flush_0
57 input 1 flush_1
58 input 1 flush_2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; transition variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; statement execution variables - exec_<thread>_<pc>
59 and 1 28 53 exec_0_0
60 and 1 29 53 exec_0_1
61 and 1 30 53 exec_0_2
62 and 1 31 53 exec_0_3
63 and 1 32 53 exec_0_4

64 and 1 33 54 exec_1_0
65 and 1 34 54 exec_1_1
66 and 1 35 54 exec_1_2
67 and 1 36 54 exec_1_3
68 and 1 37 54 exec_1_4

69 and 1 38 55 exec_2_0
70 and 1 39 55 exec_2_1
71 and 1 40 55 exec_2_2
72 and 1 41 55 exec_2_3
73 and 1 42 55 exec_2_4
74 and 1 43 55 exec_2_5

; checkpoint variables - check_<id>
75 and 1 44 45
76 and 1 46 75 check_0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; scheduling constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

77 or 1 53 54
78 or 1 55 77
79 or 1 56 78
80 or 1 57 79
81 or 1 58 80
82 or 1 51 81
83 constraint 82
84 nand 1 53 54
85 nand 1 53 55
86 nand 1 53 56
87 nand 1 53 57
88 nand 1 53 58
89 nand 1 53 51
90 nand 1 54 55
91 nand 1 54 56
92 nand 1 54 57
93 nand 1 54 58
94 nand 1 54 51
95 nand 1 55 56
96 nand 1 55 57
97 nand 1 55 58
98 nand 1 55 51
99 nand 1 56 57
100 nand 1 56 58
101 nand 1 56 51
102 nand 1 57 58
103 nand 1 57 51
104 nand 1 58 51
105 and 1 84 85
106 and 1 86 105
107 and 1 87 106
108 and 1 88 107
109 and 1 89 108
110 and 1 90 109
111 and 1 91 110
112 and 1 92 111
113 and 1 93 112
114 and 1 94 113
115 and 1 95 114
116 and 1 96 115
117 and 1 97 116
118 and 1 98 117
119 and 1 99 118
120 and 1 100 119
121 and 1 101 120
122 and 1 102 121
123 and 1 103 122
124 and 1 104 123
125 constraint 124

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; store buffer constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

126 or 1 29 32
127 implies 1 126 -53
128 ite 1 25 127 -56
129 constraint 128 flush_0

130 or 1 34 37
131 implies 1 130 -54
132 ite 1 26 131 -57
133 constraint 132 flush_1

134 implies 1 -27 -58
135 constraint 134 flush_2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; checkpoint constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

136 and 1 44 -76
137 implies 1 136 -53
138 constraint 137 block_0_0

139 and 1 45 -76
140 implies 1 139 -54
141 constraint 140 block_0_1

142 and 1 46 -76
143 implies 1 142 -55
144 constraint 143 block_0_2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; halt constraints
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

145 implies 1 47 -53
146 constraint 145 halt_0

147 implies 1 48 -54
148 constraint 147 halt_1

149 implies 1 49 -55
150 constraint 149 halt_2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; state variable definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; accu variables - accu_<thread>
151 init 2 13 6
152 add 2 13 7
153 ite 2 59 152 13 0:0:ADDI:1
154 read 2 50 7
155 eq 1 19 7
156 and 1 25 155
157 ite 2 156 22 154
158 ite 2 61 157 153 0:2:LOAD:1
159 next 2 13 158 accu_0

160 init 2 14 6
161 add 2 14 7
162 ite 2 64 161 14 1:0:ADDI:1
163 read 2 50 6
164 eq 1 20 6
165 and 1 26 164
166 ite 2 165 23 163
167 ite 2 66 166 162 1:2:LOAD:0
168 next 2 14 167 accu_1

169 init 2 15 6
170 eq 1 21 6
171 and 1 27 170
172 ite 2 171 24 163
173 add 2 15 172
174 ite 2 70 173 15 2:1:ADD:0
175 eq 1 21 7
176 and 1 27 175
177 ite 2 176 24 154
178 add 2 15 177
179 ite 2 71 178 174 2:2:ADD:1
180 next 2 15 179 accu_2

; mem variables - mem_<thread>
181 init 2 16 6
182 next 2 16 16 mem_0

183 init 2 17 6
184 next 2 17 17 mem_1

185 init 2 18 6
186 next 2 18 18 mem_2

; store buffer address variables - sb-adr_<thread>
187 init 2 19 6
188 ite 2 60 6 19 0:1:STORE:0
189 next 2 19 188 sb-adr_0

190 init 2 20 6
191 ite 2 65 7 20 1:1:STORE:1
192 next 2 20 191 sb-adr_1

193 init 2 21 6
194 next 2 21 21 sb-adr_2

; store buffer value variables - sb-val_<thread>
195 init 2 22 6
196 ite 2 60 13 22 0:1:STORE:0
197 next 2 22 196 sb-val_0

198 init 2 23 6
199 ite 2 65 14 23 1:1:STORE:1
200 next 2 23 199 sb-val_1

201 init 2 24 6
202 next 2 24 24 sb-val_2

; store buffer full variables - sb-full_<thread>
203 init 1 25 4
204 or 1 60 25
205 ite 1 56 4 204
206 next 1 25 205 sb-full_0

207 init 1 26 4
208 or 1 65 26
209 ite 1 57 4 208
210 next 1 26 209 sb-full_1

211 init 1 27 4
212 ite 1 58 4 27
213 next 1 27 212 sb-full_2

; statement activation variables - stmt_<thread>_<pc>
214 init 1 28 5
215 and 1 28 -59 0:0:ADDI:1
216 next 1 28 215 stmt_0_0

217 init 1 29 4
218 and 1 29 -60 0:1:STORE:0
219 ite 1 28 59 218 0:0:ADDI:1
220 next 1 29 219 stmt_0_1

221 init 1 30 4
222 and 1 30 -61 0:2:LOAD:1
223 ite 1 29 60 222 0:1:STORE:0
224 next 1 30 223 stmt_0_2

225 init 1 31 4
226 and 1 31 -62 0:3:CHECK:0
227 ite 1 30 61 226 0:2:LOAD:1
228 next 1 31 227 stmt_0_3

229 init 1 32 4
230 and 1 32 -63 0:4:HALT
231 ite 1 31 62 230 0:3:CHECK:0
232 next 1 32 231 stmt_0_4

233 init 1 33 5
234 and 1 33 -64 1:0:ADDI:1
235 next 1 33 234 stmt_1_0

236 init 1 34 4
237 and 1 34 -65 1:1:STORE:1
238 ite 1 33 64 237 1:0:ADDI:1
239 next 1 34 238 stmt_1_1

240 init 1 35 4
241 and 1 35 -66 1:2:LOAD:0
242 ite 1 34 65 241 1:1:STORE:1
243 next 1 35 242 stmt_1_2

244 init 1 36 4
245 and 1 36 -67 1:3:CHECK:0
246 ite 1 35 66 245 1:2:LOAD:0
247 next 1 36 246 stmt_1_3

248 init 1 37 4
249 and 1 37 -68 1:4:HALT
250 ite 1 36 67 249 1:3:CHECK:0
251 next 1 37 250 stmt_1_4

252 init 1 38 5
253 and 1 38 -69 2:0:CHECK:0
254 next 1 38 253 stmt_2_0

255 init 1 39 4
256 and 1 39 -70 2:1:ADD:0
257 ite 1 38 69 256 2:0:CHECK:0
258 next 1 39 257 stmt_2_1

259 init 1 40 4
260 and 1 40 -71 2:2:ADD:1
261 ite 1 39 70 260 2:1:ADD:0
262 next 1 40 261 stmt_2_2

263 init 1 41 4
264 and 1 41 -72 2:3:JZ:5
265 ite 1 40 71 264 2:2:ADD:1
266 next 1 41 265 stmt_2_3

267 init 1 42 4
268 and 1 42 -73 2:4:EXIT:0
269 eq 1 15 6
270 and 1 72 -269
271 ite 1 41 270 268 2:3:JZ:5
272 next 1 42 271 stmt_2_4

273 init 1 43 4
274 and 1 43 -74 2:5:EXIT:1
275 and 1 72 269
276 ite 1 41 275 274 2:3:JZ:5
277 next 1 43 276 stmt_2_5

; blocking variables - block_<id>_<thread>
278 init 1 44 4
279 or 1 62 44
280 ite 1 76 4 279
281 next 1 44 280 block_0_0

282 init 1 45 4
283 or 1 67 45
284 ite 1 76 4 283
285 next 1 45 284 block_0_1

286 init 1 46 4
287 or 1 69 46
288 ite 1 76 4 287
289 next 1 46 288 block_0_2

; halt variables - halt_<thread>
290 init 1 47 4
291 or 1 63 47
292 next 1 47 291 halt_0

293 init 1 48 4
294 or 1 68 48
295 next 1 48 294 halt_1

296 init 1 49 4
297 next 1 49 49 halt_2

; heap variable
298 init 3 50 12
299 write 3 50 19 22
300 ite 3 56 299 50 flush_0
301 write 3 50 20 23
302 ite 3 57 301 300 flush_1
303 write 3 50 21 24
304 ite 3 58 303 302 flush_2
305 next 3 50 304 heap

; exit flag variable
306 init 1 51 4
307 and 1 291 294
308 and 1 49 307
309 or 1 51 308
310 or 1 73 309
311 or 1 74 310
312 next 1 51 311 exit

; exit code variable
313 init 2 52 6
314 ite 2 73 6 52 2:4:EXIT:0
315 ite 2 74 7 314 2:5:EXIT:1
316 next 2 52 315 exit-code

